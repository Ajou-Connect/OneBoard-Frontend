{"version":3,"file":"main.eb1454d53b08b5f0ae22.hot-update.js","sources":["/mnt/e/sw_capstone/frontend/src/Pages/LecturePages/Lesson/LessonDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport Iframe from 'react-iframe';\r\nimport Button from '../../../Component/common/Button';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst TTitle = styled.div`\r\n  font-size: 30px;\r\n  margin-left: 15px;\r\n  margin-top: 15px;\r\n  border-bottom: 1px solid #f7f9fc;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-style: italic;\r\n  text-align: left;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2.3rem;\r\n  margin-left: 1rem;\r\n  & + & {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst TabletrColor = styled.tr`\r\n  &:nth-child(even) {\r\n    background: #f7f9fc;\r\n  }\r\n`;\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst LessonDetail = ({ match }) => {\r\n  const lessonId = match.params.lessonId;\r\n  const lectureId = match.params.lectureId;\r\n  const [isProfessor, setIsProfessor] = useState(false);\r\n  const [lessonDetails, setLessonDetails] = useState([]);\r\n  const [studentInfo, setStudentInfo] = useState([]);\r\n  const [sessionId, setSessionId] = useState(\"\");\r\n  const user = JSON.parse(sessionStorage.userInfo);\r\n  const userType = user.userType;\r\n  const Url = `https://docs.google.com/gview?embedded=true&url=https://115.85.182.194:8080/lecture/${lectureId}/lesson/${lessonId}/note`;\r\n  const FileURL = `https://115.85.182.194:8080/lecture/${lectureId}/lesson/${lessonId}/note`;\r\n  const labels = ['출석', '결석', '지각'];\r\n  const LessonLink = `/class/${lectureId}/${lessonId}/${sessionId}/${userType}`;\r\n  const token = sessionStorage.getItem(\"token\");\r\n\r\n  const getLessonData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`lecture/${lectureId}/lesson/${lessonId}`)\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          setLessonDetails(result);\r\n          setSessionId(result.session);\r\n          console.log(result);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  \r\n\r\n  const LessonCheck = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios.get(`/lecture/${lectureId}/lesson/${lessonId}/live/entrance`, { headers: { \"X-AUTH-TOKEN\": `${token}` }, params: { \"session\": `${sessionId}` } })\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          console.log(result);\r\n      })\r\n    })\r\n  }\r\n\r\n  const getLessonAttendanceData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`lecture/${lectureId}/lesson/${lessonId}/attendances`)\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          console.log(result);\r\n          setStudentInfo(result);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  const checkIsProfessor = () => {\r\n    if (userType === \"T\") {\r\n      setIsProfessor(true);\r\n    }\r\n    else setIsProfessor(false);\r\n\r\n  }\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: '수업 출석 현황',\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: '학생 수',\r\n        data: [\r\n          studentInfo.filter((ex) => ex.attendanceList[0].status === 2).length,\r\n          studentInfo.filter((ex) => ex.attendanceList[0].status === 0).length,\r\n          studentInfo.filter((ex) => ex.attendanceList[0].status === 1).length,\r\n        ],\r\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLessonData();\r\n    getLessonAttendanceData();\r\n    checkIsProfessor();\r\n    console.log(studentInfo.map((ex, index) => ex.attendanceList.map((ex2, index) => ex2.status)));\r\n  }, []);\r\n\r\n  const onCancel = () => {\r\n    return (window.location.href = `/Main/Lecture/${lectureId}/Lesson`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex' }}>\r\n        <TTitle>{lessonDetails.title}</TTitle>\r\n        <div\r\n          style={{\r\n            fontSize: '1.3rem',\r\n            marginTop: '1.5rem',\r\n            marginRight: '15px',\r\n            marginLeft: '2rem',\r\n          }}\r\n        >\r\n          강의 날짜 : {lessonDetails.date}\r\n        </div>\r\n        <div\r\n          style={{\r\n            fontSize: '1.3rem',\r\n            marginTop: '1.5rem',\r\n            marginRight: '15px',\r\n            marginLeft: '2rem',\r\n            display: 'flex',\r\n          }}\r\n        >\r\n          수업 타입 :\r\n          {lessonDetails.type === 2 ? (\r\n            <div style={{ marginLeft: '15px' }}>대면 수업</div>\r\n          ) : lessonDetails.type === 1 ? (\r\n            <div style={{ marginLeft: '15px' }}>비대면 실시간 수업</div>\r\n          ) : (\r\n            <div style={{ marginLeft: '15px' }}>녹화 강의</div>\r\n          )}\r\n        </div>\r\n        {userType === 'S' ? (\r\n          <div\r\n            style={{\r\n              fontSize: '1.3rem',\r\n              marginTop: '1.5rem',\r\n              marginRight: '50px',\r\n              marginLeft: 'auto',\r\n            }}\r\n          >\r\n            출석 정보\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n      <hr style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }} />\r\n\r\n      <div style={{ display: 'flex', marginLeft: '1rem' }}>\r\n        <div\r\n          style={{\r\n            fontSize: '1rem',\r\n            paddingBottom: '0.5rem',\r\n            marginBottom: '2rem',\r\n            marginTop: '15px',\r\n            marginRight: '15px',\r\n            fontWeight: 'bold',\r\n            display: 'flex',\r\n          }}\r\n        >\r\n          강의 노트 :{' '}\r\n          {lessonDetails.noteUrl === null ? (\r\n            <div style={{ color: 'red', marginLeft: '1rem' }}>등록된 강의노트가 없습니다</div>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                textDecoration: 'underline',\r\n                color: 'skyblue',\r\n                marginLeft: '1rem',\r\n              }}\r\n            >\r\n              <a href={FileURL}>{lessonDetails.title} 강의노트 다운로드</a>\r\n              <div>\r\n                <Iframe url={Url} width=\"700px\" height=\"400px\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {lessonDetails.type === 1 ? (\r\n          <div\r\n            style={{\r\n              fontSize: '1rem',\r\n              paddingBottom: '0.5rem',\r\n              marginBottom: '2rem',\r\n              marginTop: '15px',\r\n              marginRight: '15px',\r\n              fontWeight: 'bold',\r\n              marginLeft: '15px',\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            {isProfessor ? (<a href={LessonLink} onClick={LessonCheck}>실시간 수업입장</a>) : (<a href=\"/class/st\">실시간 수업입장</a>)}\r\n          </div>\r\n        ) : lessonDetails.type === 2 ? (\r\n          <div\r\n            style={{\r\n              fontSize: '1rem',\r\n              paddingBottom: '0.5rem',\r\n              marginBottom: '2rem',\r\n              marginTop: '15px',\r\n              marginRight: '15px',\r\n              fontWeight: 'bold',\r\n              marginLeft: '15px',\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            강의실 정보 : {lessonDetails.room}\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              fontSize: '1rem',\r\n              paddingBottom: '0.5rem',\r\n              marginBottom: '2rem',\r\n              marginTop: '15px',\r\n              marginRight: '15px',\r\n              fontWeight: 'bold',\r\n              marginLeft: '15px',\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            녹화 강의 : {lessonDetails.videoUrl}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <hr style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }} />\r\n      {userType === 'S' ? (\r\n        <div></div>\r\n      ) : (\r\n        <>\r\n          <div style={{ display: 'flex' }}>\r\n            <div style={{ width: '50%' }}>\r\n              <Bar options={options} data={data} />\r\n            </div>\r\n            <div style={{ width: '50%', marginLeft: '1rem' }}>\r\n              {/* <WriteAcitonButtonBlock>\r\n                  <StyledButton cyan onClick={}>일괄 결석</StyledButton>\r\n                <StyledButton cyan onClick={}>일괄 출석</StyledButton>\r\n              </WriteAcitonButtonBlock> */}\r\n              <table\r\n                style={{\r\n                  width: '100%',\r\n                  textAlign: 'center',\r\n                  marginRight: '5px',\r\n                  borderRight: '1px solid #D5D5D5',\r\n                }}\r\n              >\r\n                <thead\r\n                  style={{\r\n                    borderBottom: '1px solid #D5D5D5',\r\n                    fontWeight: 'bold',\r\n                    fontWeight: '500',\r\n                    backgroundColor: '#f3f3f3',\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <th style={{ padding: '10px 0', width: 'auto' }}>이름</th>\r\n                    <th style={{ padding: '10px 0', width: 'auto' }}>학번</th>\r\n                    <th style={{ padding: '10px 0', width: 'auto' }}>출결</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {studentInfo.map((studentList, index) => (\r\n                    <TabletrColor key={index}>\r\n                      <td style={{ padding: '10px 0', borderBottom: '1px solid #D5D5D5' }}>\r\n                        {studentList.studentName}\r\n                      </td>\r\n                      <td style={{ padding: '10px 0', borderBottom: '1px solid #D5D5D5' }}>\r\n                        {studentList.studentNumber}\r\n                      </td>\r\n                      <td style={{ padding: '10px 0', borderBottom: '1px solid #D5D5D5' }}>\r\n                        {studentList.attendanceList[0].status === 2 ? (\r\n                          <div style={{ color: 'green', fontWeight: 'bold' }}>출석</div>\r\n                        ) : studentList.attendanceList[0].status === 1 ? (\r\n                          <div style={{ color: 'yellowgreen', fontWeight: 'bold' }}>지각</div>\r\n                        ) : (\r\n                          <div style={{ color: 'red', fontWeight: 'bold' }}>결석</div>\r\n                        )}\r\n                      </td>\r\n                    </TabletrColor>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <hr\r\n            style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }}\r\n          />\r\n        </>\r\n      )}\r\n      <div style={{ height: '5rem' }}>\r\n        <StyledButton cyan onClick={onCancel}>\r\n          뒤로가기\r\n        </StyledButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LessonDetail;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AASA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AAFA;AAaA;AACA;AACA;AAEA;AACA;AAKA;AAPA;AAHA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AA1CA;AAAA;AAAA;AAAA;AAAA;AA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAfA;AAAA;AAAA;AAAA;AAAA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgcA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAtBA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAwDA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAxDA;AA6DA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AA/LA;AAAA;AAAA;AAAA;AAAA;AAsMA;AACA;AAnTA;AACA;AADA;AAoTA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}