{"version":3,"file":"main.a101749d684e3da677d0.hot-update.js","sources":["/mnt/f/SW_Capstone/frontend/src/Pages/LecturePages/Assignment/UpdateStudentAssignment.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: inline-block;\r\n  margin: 10px auto;\r\n  padding: 0px 20px;\r\n  //overflow-y: auto;\r\n  //align-items : center;\r\n  //justify-content : center;\r\n`;\r\n\r\nconst Line = styled.hr`\r\n  width: 100%;\r\n  margin: 10px 0px;\r\n  display: block;\r\n  border-color: #ffffff;\r\n`;\r\n\r\nconst WriteBtn = styled.button`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  padding: 5px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  margin-right: 30px;\r\n  margin-left: 20px;\r\n  background-color: #d3d31c;\r\n  color: #3e3e3e;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #bfbfbf;\r\n  }\r\n`;\r\n\r\nconst UpdateBtn = styled.button`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  padding: 5px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  margin-right: 30px;\r\n  background-color: #f83636;\r\n  color: #3e3e3e;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #bfbfbf;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  margin-top: 20px;\r\n  margin-left: 20px;\r\n  font-size: 30px;\r\n  border-bottom: 1px solid #f7f9fc;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-style: italic;\r\n`;\r\nconst SubTitle = styled.div`\r\n  float: left;\r\n  margin-top: 3px;\r\n  margin-right: 20px;\r\n  color: #8b8b8b;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n`;\r\nconst Btn = styled.button`\r\n  font-size: 2px;\r\n  padding: 5px;\r\n  margin-top: 50px;\r\n  margin-right: 10px;\r\n  background-color: rgba(215, 226, 185, 0.596);\r\n  color: #3e3e3e;\r\n  border-radius: 7px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #bfbfbf;\r\n  }\r\n`;\r\nconst ProblemContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 30px 15px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-shadow: 0 5px 5px 0 #eeeeee;\r\n`;\r\nconst ProblemTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\nconst ProblemContent = styled.div`\r\n  width: 100%;\r\n  margin: 10px auto;\r\n  padding: 0 5px;\r\n`;\r\nconst AnswerInput = styled.textarea`\r\n  height: 60px;\r\n  width: 100%;\r\n  resize: none;\r\n  border: 1px solid #d9d9d9;\r\n  &:focus {\r\n    border: 1px solid #40a9ff;\r\n    box-shadow: 0 0 0 2px #1890ff 20%;\r\n    outline: 0;\r\n  }\r\n`;\r\nconst UpdateStudentAssignment = ({ match }) => {\r\n  const user = JSON.parse(window.localStorage.userInfo);\r\n  const userType = user.userType;\r\n  const token = localStorage.getItem('token');\r\n  const today = moment();\r\n  const lectureId = match.params.lectureId;\r\n  const assignmentId = match.params.assignmentId;\r\n  const [assignments, setAssignments] = useState({});\r\n  const [studentAnswer, setStudentAnswer] = useState('');\r\n  const [submitData, setSubmitData] = useState({});\r\n  const [studentSubmitFile, setStudentSubmitFile] = useState('');\r\n  const getData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`/lecture/${lectureId}/assignment/${assignmentId}`)\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          console.log(result);\r\n          setAssignments(result);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  const getSubmitData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`/lecture/${lectureId}/assignment/${assignmentId}/submit`, {\r\n          headers: { 'X-AUTH-TOKEN': `${token}` },\r\n        })\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          console.log(result);\r\n          setSubmitData(result);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  const stateDisplay = (startDate, endDate) => {\r\n    if (today.isBefore(startDate)) {\r\n      return (\r\n        <div style={{ color: '#BFBFBF', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (예정)\r\n        </div>\r\n      );\r\n    } else if (today.isBefore(endDate)) {\r\n      return (\r\n        <div style={{ color: '#61C679', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (진행중)\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ color: '#E24C4B', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (마감)\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const headersConfig = {\r\n    'X-AUTH-TOKEN': `${token}`,\r\n    'Content-Type': 'multipart/form-data',\r\n  };\r\n\r\n  const submitAssignment = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', studentSubmitFile);\r\n    formData.append('content', studentAnswer);\r\n    axios\r\n      .put(`/lecture/${lectureId}/assignment/${assignmentId}/submit`, formData, {\r\n        headers: headersConfig,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onChangeAnswer = (e) => {\r\n    setStudentAnswer(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment`);\r\n  };\r\n\r\n  const onFileChange = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.files);\r\n    setStudentSubmitFile(e.target.files[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getSubmitData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Title>Assignment</Title>\r\n      <Line />\r\n      <ProblemContainer>\r\n        <ProblemTitle>제목 : {assignments.title}</ProblemTitle>\r\n        <Line />\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            margin: '0',\r\n            padding: '0px 5px',\r\n            fontWeight: '700',\r\n          }}\r\n        >\r\n          <div>{stateDisplay(moment(assignments.startDt), moment(assignments.endDt))}</div>\r\n          <div>배점 {assignments.score}</div>\r\n        </div>\r\n        <ProblemContent>{ReactHtmlParser(assignments.content)}</ProblemContent>\r\n        <Line />\r\n      </ProblemContainer>\r\n      <ProblemContainer style={{ margin: '10px auto' }}>\r\n        <ProblemTitle>과제 제출 작성</ProblemTitle>\r\n\r\n        <Line />\r\n        <div>\r\n          <AnswerInput onChange={onChangeAnswer} />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', margin: '5px 0' }}>\r\n            <div style={{ paddingLeft: '5px', lineHeight: '41.6px' }}>파일 첨부</div>\r\n            <form name=\"noteFile\" encType=\"multipart/form-data\">\r\n              <input\r\n                type=\"file\"\r\n                onChange={onFileChange}\r\n                style={{ height: '41.6px', padding: '5px', margin: '10px', cursor: 'pointer' }}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </ProblemContainer>\r\n      <div>\r\n        <WriteBtn onClick={onCancel}>뒤로가기</WriteBtn>\r\n        <Btn onClick={submitAssignment}>수정하기</Btn>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateStudentAssignment;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAahBA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAvCA;AAAA;AAAA;AAAA;AAAA;AA6CA;AACA;AAhKA;AACA;AADA;AAiKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}