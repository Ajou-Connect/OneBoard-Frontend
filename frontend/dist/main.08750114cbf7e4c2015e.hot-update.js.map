{"version":3,"file":"main.08750114cbf7e4c2015e.hot-update.js","sources":["/mnt/e/sw_capstone/frontend/src/Pages/LecturePages/Assignment/StudentSubmitDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport StudentSubmit from './StudentSubmit';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport moment from 'moment';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: inline-block;\r\n  margin: 10px auto;\r\n  padding: 0px 20px;\r\n  //overflow-y: auto;\r\n  //align-items : center;\r\n  //justify-content : center;\r\n`;\r\nconst Title = styled.div`\r\n  margin-top: 20px;\r\n  margin-left: 20px;\r\n  font-size: 30px;\r\n  border-bottom: 1px solid #f7f9fc;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-style: italic;\r\n`;\r\nconst SubTitle = styled.div`\r\n  float: left;\r\n  margin-top: 3px;\r\n  margin-right: 20px;\r\n  color: #8b8b8b;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n`;\r\nconst Btn = styled.button`\r\n  font-size: 2px;\r\n  padding: 5px;\r\n  margin-top: 50px;\r\n  margin-right: 10px;\r\n  background-color: rgba(215, 226, 185, 0.596);\r\n  color: #3e3e3e;\r\n  border-radius: 7px;\r\n  &:hover {\r\n    background-color: #bfbfbf;\r\n  }\r\n`;\r\nconst ProblemContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 30px 15px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-shadow: 0 5px 5px 0 #eeeeee;\r\n`;\r\nconst ProblemTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\nconst ProblemContent = styled.div`\r\n  width: 100%;\r\n  margin: 10px auto;\r\n  padding: 0 5px;\r\n`;\r\nconst FeedbackInput = styled.textarea`\r\n  height: 60px;\r\n  width: 100%;\r\n  resize: none;\r\n  border: 1px solid #d9d9d9;\r\n  &:focus {\r\n    border: 1px solid #40a9ff;\r\n    box-shadow: 0 0 0 2px #1890ff 20%;\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nconst ScoreInput = styled.input`\r\n  width: 50px;\r\n  border: 1px solid #d9d9d9;\r\n  padding: 10px;\r\n  display: inline-block;\r\n`;\r\n\r\nconst StudentSubmitDetail = ({ match }) => {\r\n  const [score, setScore] = useState(0);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [submitAssignments, setSubmitAssignments] = useState([]);\r\n  const [assignments, setAssignments] = useState([]);\r\n  const lectureId = match.params.lectureId;\r\n  const submitId = match.params.submitId;\r\n  const assignmentId = match.params.assignmentId;\r\n  const user = JSON.parse(localStorage.userInfo);\r\n  const userType = user.userType;\r\n\r\n  // const submitId = match.params.submitId;\r\n\r\n  const stateDisplay = (startDate, endDate) => {\r\n    const today = moment();\r\n\r\n    if (today.isBefore(startDate)) {\r\n      return (\r\n        <div style={{ color: '#BFBFBF', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (예정)\r\n        </div>\r\n      );\r\n    } else if (today.isBefore(endDate)) {\r\n      return (\r\n        <div style={{ color: '#61C679', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (진행중)\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ color: '#E24C4B', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (마감)\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getSubmitAssignmentData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      //submit ID 수정해주기\r\n      axios\r\n        .get(`/lecture/${lectureId}/assignment/${assignmentId}/submit/${submitId}`)\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          console.log(result);\r\n          setSubmitAssignments(result);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  const getAssignmentData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`/lecture/${lectureId}/assignment/${assignmentId}`)\r\n        .then((res) => {\r\n          const assignmentResult = res.data.data;\r\n          setAssignments(assignmentResult);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSubmitAssignmentData()\r\n    getAssignmentData();\r\n    console.log(submitId);\r\n  }, []);\r\n\r\n  const onCancel = () => {\r\n    return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment/${assignmentId}/ProfessorDetail`);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    //post 함수\r\n    axios\r\n      .post(`/lecture/${lectureId}/assignment/${assignmentId}/submit/${submitId}`, {\r\n        score: score,\r\n        feedback: feedback,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment/${assignmentId}/ProfessorDetail`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getFeedback = (e) => {\r\n    setFeedback(e.target.value);\r\n\r\n    console.log(feedback);\r\n  };\r\n\r\n  const getScore = (e) => {\r\n    if (e.target.value > assignments.score) {\r\n      alert('배점보다 높게 점수를 입력할 수 없습니다.');\r\n      window.location.reload();\r\n    } else {\r\n      setScore(e.target.value);\r\n    }\r\n    console.log(score);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Assignment</Title>\r\n      <hr\r\n        style={{\r\n          width: '100%',\r\n          margin: '30px 0px',\r\n          marginTop: '50px',\r\n          display: 'block',\r\n          borderColor: '#ffffff',\r\n        }}\r\n      />\r\n      <ProblemContainer>\r\n        <ProblemTitle>{assignments.title}</ProblemTitle>\r\n        <hr\r\n          style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }}\r\n        />\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            margin: '0',\r\n            padding: '0px 5px',\r\n            fontWeight: '700',\r\n          }}\r\n        >\r\n          <div>{stateDisplay(moment(assignments.startDt), moment(assignments.endDt))}</div>\r\n          <div>배점 {assignments.score}</div>\r\n        </div>\r\n        <ProblemContent>{ReactHtmlParser(assignments.content)}</ProblemContent>\r\n        <hr\r\n          style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }}\r\n        />\r\n      </ProblemContainer>\r\n      <hr style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }} />\r\n      {/* 여기에 이제 학생 제출물 수정하는 부분 들어가주면 됨  */}\r\n      <hr style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }} />\r\n      <div>\r\n        <ScoreInput onChange={getScore} /> / {assignments.score}\r\n      </div>\r\n      <hr style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }} />\r\n      <FeedbackInput onChange={getFeedback} placeholder=\"점수에 대한 피드백을 작성해주세요\" />\r\n      <Btn onClick={onSubmit}>저장</Btn>\r\n      <Btn onClick={onCancel}>취소</Btn>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StudentSubmitDetail;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1CA;AAAA;AAAA;AAAA;AAAA;AA6CA;AACA;AAjKA;AACA;AADA;AAkKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}