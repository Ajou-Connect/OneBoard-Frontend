{"version":3,"file":"main.6667c92da38e50c71b94.hot-update.js","sources":["/mnt/f/SW_Capstone/frontend/src/Pages/LecturePages/Assignment/ProfessorAssignmentDetail.js","/mnt/f/SW_Capstone/frontend/src/Pages/LecturePages/Assignment/ProfessorAssignmentList.js","/mnt/f/SW_Capstone/frontend/src/Pages/LecturePages/Assignment/StudentAssignmentDetail.js","/mnt/f/SW_Capstone/frontend/src/Pages/LecturePages/Assignment/StudentSubmit.js","/mnt/f/SW_Capstone/frontend/src/Pages/LecturePages/Assignment/StudentSubmitDetail.js","/mnt/f/SW_Capstone/frontend/src/Pages/LecturePages/Assignment/UpdateAssignment.js","/mnt/f/SW_Capstone/frontend/src/Pages/LecturePages/Assignment/UpdateStudentAssignment.js","/mnt/f/SW_Capstone/frontend/src/Pages/LecturePages/Lesson/LessonDetail.js","/mnt/f/SW_Capstone/frontend/src/ZoomSample/feature/video/QuizModal.js","/mnt/f/SW_Capstone/frontend/src/ZoomSample/feature/video/components/video-footer.tsx","/mnt/f/SW_Capstone/frontend/src/ZoomSample/feature/video/video.tsx","/mnt/f/SW_Capstone/frontend/src/zoomtest/TestZoom.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport StudentSubmit from './StudentSubmit';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: inline-block;\r\n  margin: 10px auto;\r\n  padding: 0px 20px;\r\n  //overflow-y: auto;\r\n  //align-items : center;\r\n  //justify-content : center;\r\n`;\r\nconst Title = styled.div`\r\n  margin-top: 20px;\r\n  margin-left: 20px;\r\n  font-size: 30px;\r\n  border-bottom: 1px solid #f7f9fc;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-style: italic;\r\n`;\r\nconst SubTitle = styled.div`\r\n  float: left;\r\n  margin-top: 3px;\r\n  margin-right: 20px;\r\n  color: #8b8b8b;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n`;\r\nconst Btn = styled.button`\r\n  font-size: 2px;\r\n  padding: 5px;\r\n  margin-top: 50px;\r\n  margin-right: 10px;\r\n  background-color: rgba(215, 226, 185, 0.596);\r\n  color: #3e3e3e;\r\n  border-radius: 7px;\r\n  &:hover {\r\n    background-color: #bfbfbf;\r\n  }\r\n`;\r\nconst ProblemContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 30px 15px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-shadow: 0 5px 5px 0 #eeeeee;\r\n`;\r\nconst ProblemTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\nconst ProblemContent = styled.div`\r\n  width: 100%;\r\n  margin: 10px auto;\r\n  padding: 0 5px;\r\n`;\r\nconst AnswerInput = styled.textarea`\r\n  height: 60px;\r\n  width: 100%;\r\n  resize: none;\r\n  border: 1px solid #d9d9d9;\r\n  &:focus {\r\n    border: 1px solid #40a9ff;\r\n    box-shadow: 0 0 0 2px #1890ff 20%;\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nconst WriteBtn = styled.button`\r\n  display: flex;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  padding: 5px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  margin-left: 10px;\r\n  margin-right: 30px;\r\n  background-color: #d3d31c;\r\n  color: #3e3e3e;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #bfbfbf;\r\n  }\r\n`;\r\n//여기서의 match는 각각의 assignment에 대한 렌더링을 위해서\r\nconst ProfessorAssignmentDetail = ({ match }) => {\r\n  const [submitAssignments, setSubmitAssignments] = useState({});\r\n  const [studentScore, setStudentScore] = useState(0);\r\n  const [assignments, setAssignments] = useState({});\r\n  const [onGoing, setOnGoing] = useState(false);\r\n  const today = moment();\r\n  const user = JSON.parse(localStorage.userInfo);\r\n  const userType = user.userType;\r\n  const lectureId = match.params.lectureId;\r\n  const assignmentId = match.params.assignmentId;\r\n  const fileUrl = `https://oneboard.connect.o-r.kr:8080/lecture/${lectureId}/assignment/${assignmentId}/file`;\r\n  const stateDisplay = (startDate, endDate) => {\r\n    const today = moment();\r\n\r\n    if (today.isBefore(startDate)) {\r\n      return (\r\n        <div style={{ color: '#BFBFBF', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (예정)\r\n        </div>\r\n      );\r\n    } else if (today.isBefore(endDate)) {\r\n      return (\r\n        <div style={{ color: '#61C679', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (진행중)\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ color: '#E24C4B', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (마감)\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getSubmitData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`/lecture/${lectureId}/assignment/${assignmentId}/submits`)\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          setSubmitAssignments(result);\r\n          if (today.isBefore(result.endDt) && today.isAfter(result.startDt)) {\r\n            setOnGoing(true);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  const getAssignmentData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`/lecture/${lectureId}/assignment/${assignmentId}`)\r\n        .then((res) => {\r\n          const assignmentResult = res.data.data;\r\n          console.log(res);\r\n          setAssignments(assignmentResult);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSubmitData();\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Assignment</Title>\r\n      <hr\r\n        style={{\r\n          width: '100%',\r\n          margin: '30px 0px',\r\n          marginTop: '50px',\r\n          display: 'block',\r\n          borderColor: '#ffffff',\r\n        }}\r\n      />\r\n      <ProblemContainer>\r\n        <ProblemTitle>{assignments.title}</ProblemTitle>\r\n        <hr\r\n          style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }}\r\n        />\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            margin: '0',\r\n            padding: '0px 5px',\r\n            fontWeight: '700',\r\n          }}\r\n        >\r\n          <div>{stateDisplay(moment(assignments.startDt), moment(assignments.endDt))}</div>\r\n          <div>배점 {assignments.score}</div>\r\n        </div>\r\n        <ProblemContent>\r\n          <a\r\n            href={fileUrl}\r\n            style={{ fontWeight: 'bold', textDecoration: 'underline', fontSize: '1.2rem' }}\r\n          >\r\n            과제 파일 다운로드\r\n          </a>\r\n          <br />\r\n          <br />\r\n          {ReactHtmlParser(assignments.content)}\r\n        </ProblemContent>\r\n        <hr\r\n          style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }}\r\n        />\r\n      </ProblemContainer>\r\n      <StudentSubmit\r\n        lectureId={lectureId}\r\n        assignmentId={assignmentId}\r\n        assignmentsScore={assignments.score}\r\n      />\r\n      <WriteBtn onClick={onCancel}>뒤로가기</WriteBtn>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfessorAssignmentDetail;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport Button from '../../../Component/common/Button';\r\n\r\nconst WriteAcitonButtonBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-bottom: 2rem;\r\n  display: flex;\r\n  button + button {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2.125rem;\r\n  & + & {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  margin-top: 1.5rem;\r\n  margin-left: 20px;\r\n  font-size: 30px;\r\n  border-bottom: 1px solid #f7f9fc;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst SubTitle = styled.div`\r\n  float: left;\r\n  margin-top: 3px;\r\n  margin-right: 20px;\r\n  color: #8b8b8b;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst StateColorCircle = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  display: inline-block;\r\n  float: right;\r\n  border-radius: 75px;\r\n`;\r\nconst StateDescript = styled.div`\r\n  height: 20px;\r\n  display: inline-block;\r\n  float: right;\r\n  font-size: 14px;\r\n  margin-left: 5px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ProfessorAssignmentList = (props) => {\r\n  const user = JSON.parse(localStorage.userInfo);\r\n  const userType = user.userType;\r\n  const lectureId = props.lectureId;\r\n  const [assignments, setAssignments] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isEmpty, setIsEmpty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchAssignment = async () => {\r\n      try {\r\n        setError(null);\r\n        setLoading(true);\r\n        //axios.get\r\n        await axios\r\n          .get(`/lecture/${lectureId}/assignments`)\r\n          .then((res) => {\r\n            const result = res.data.data;\r\n            console.log(result);\r\n            setAssignments(result);\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n            setError(e);\r\n          });\r\n        setLoading(false);\r\n      } catch (e) {\r\n        setError(e);\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchAssignment();\r\n  }, []);\r\n\r\n  const stateDisplay = (startDate, endDate) => {\r\n    let today = moment();\r\n\r\n    if (today.isBefore(startDate)) {\r\n      return (\r\n        <div style={{ color: '#BFBFBF', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (예정)\r\n        </div>\r\n      );\r\n    } else if (today.isBefore(endDate)) {\r\n      return (\r\n        <div style={{ color: '#61C679', fontWeight: '700' }}>\r\n          <StateColorCircle style={{ backgroundColor: '#66FF33' }} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ color: '#E24C4B', fontWeight: '700' }}>\r\n          <StateColorCircle style={{ backgroundColor: '#E24C4B' }} />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: 'center',\r\n          fontSize: '30px',\r\n          fontStyle: 'italic',\r\n          fontWeight: 'bold',\r\n        }}\r\n      >\r\n        로딩중 ...\r\n      </div>\r\n    );\r\n\r\n  if (error)\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: 'center',\r\n          fontSize: '30px',\r\n          fontStyle: 'italic',\r\n          fontWeight: 'bold',\r\n        }}\r\n      >\r\n        에러가 발생했습니다. 과제목록을 불러올수 없습니다.\r\n      </div>\r\n    );\r\n\r\n  const goWrite = () => {\r\n    return (window.location.href = `/Main/Lecture/${lectureId}/Assignment/Write`);\r\n  };\r\n\r\n  const goUpdate = (e, assignmentId) => {\r\n    return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment/Update/${assignmentId}`);\r\n  };\r\n\r\n  const goDetail = (e, assignmentId) => {\r\n    //해당 assignment에 해당하는 페이지로 라우팅\r\n    return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment/${assignmentId}/ProfessorDetail`);\r\n  };\r\n\r\n  const onDelete = (e, assignmentId) => {\r\n    console.log(assignmentId);\r\n    console.log(lectureId);\r\n    axios\r\n      .delete(`/lecture/${lectureId}/assignment/${assignmentId}`)\r\n      .then((res) => {\r\n        window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment`;\r\n        console.log(res);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title>Assignment</Title>\r\n      <div style={{ width: '100%', display: 'block' }}>\r\n        <div style={{ width: '100%', display: 'block', height: '20px' }}>\r\n          <StateDescript>마감</StateDescript>{' '}\r\n          <StateColorCircle style={{ backgroundColor: '#E24C4B' }} />\r\n          <StateDescript>진행 중</StateDescript>{' '}\r\n          <StateColorCircle style={{ backgroundColor: '#66FF33' }} />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <table\r\n          style={{\r\n            width: '100%',\r\n            margin: '10px auto',\r\n            borderTop: '1px solid #D5D5D5',\r\n            textAlign: 'center',\r\n            borderSpacing: '0px 10px',\r\n            borderCollapse: 'separate',\r\n          }}\r\n        >\r\n          <thead\r\n            style={{\r\n              borderBottom: '1px solid #D5D5D5',\r\n              fontStyle: 'bold',\r\n              fontWeight: '500',\r\n              backgroundColor: '#f3f3f3',\r\n            }}\r\n          >\r\n            <tr>\r\n              <th style={{ padding: '10px 0', width: '10% ' }}>ID</th>\r\n              <th style={{ padding: '10px 0', width: '20% ' }}>과제 명</th>\r\n              <th style={{ padding: '10px 0', width: '40% ' }}>과제 기간</th>\r\n              <th style={{ padding: '10px 0', width: '10% ' }}>배점</th>\r\n              <th style={{ padding: '10px 0', width: '5% ' }}>진행 상태</th>\r\n              <th style={{ padding: '10px 0', width: '20% ' }}>수정/삭제</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {assignments.length === 0 ? (\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  textAlign: 'center',\r\n                  marginLeft: '400px',\r\n                  fontSize: '30px',\r\n                  fontStyle: 'italic',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                등록된 과제가 없습니다.\r\n              </div>\r\n            ) : (\r\n              assignments.map((assignmentList, index) => {\r\n                return (\r\n                  <tr\r\n                    style={{\r\n                      borderRadius: '5px',\r\n                      boxShadow: '0px 2px 2px 1px #eeeeee',\r\n                    }}\r\n                    key={index}\r\n                  >\r\n                    <td\r\n                      style={{\r\n                        padding: '15px 0',\r\n                        borderBottom: '1px solid #D5D5D5',\r\n                      }}\r\n                    >\r\n                      {index + 1}\r\n                    </td>\r\n                    <td\r\n                      style={{\r\n                        padding: '15px 0',\r\n                        borderBottom: '1px solid #D5D5D5',\r\n                      }}\r\n                    >\r\n                      <div\r\n                        key={index}\r\n                        style={{\r\n                          fontSize: '20px',\r\n                          fontWeight: '700',\r\n                          color: '#3E3E3E',\r\n                          display: 'block',\r\n                          cursor: 'pointer',\r\n                          textDecoration: 'underline',\r\n                        }}\r\n                        onClick={(e) => goDetail(e, assignmentList.assignmentId)}\r\n                      >\r\n                        {assignmentList.title}\r\n                      </div>\r\n                    </td>\r\n                    <td\r\n                      style={{\r\n                        padding: '15px 0',\r\n                        borderBottom: '1px solid #D5D5D5',\r\n                      }}\r\n                    >\r\n                      {assignmentList.startDt} ~ {assignmentList.endDt}\r\n                    </td>\r\n                    <td\r\n                      style={{\r\n                        padding: '15px 0',\r\n                        borderBottom: '1px solid #D5D5D5',\r\n                      }}\r\n                    >\r\n                      {assignmentList.score}\r\n                    </td>\r\n\r\n                    <td\r\n                      style={{\r\n                        padding: '20px',\r\n                        borderBottom: '1px solid #D5D5D5',\r\n                        justifyContent: 'center',\r\n                      }}\r\n                    >\r\n                      {stateDisplay(moment(assignmentList.startDt), moment(assignmentList.endDt))}\r\n                    </td>\r\n                    <td\r\n                      style={{\r\n                        padding: '15px 0',\r\n                        borderBottom: '1px solid #D5D5D5',\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                      }}\r\n                    >\r\n                      <WriteAcitonButtonBlock>\r\n                        <StyledButton\r\n                          cyan\r\n                          onClick={(e) => {\r\n                            goUpdate(e, assignmentList.assignmentId);\r\n                          }}\r\n                        >\r\n                          수정\r\n                        </StyledButton>\r\n                        <StyledButton\r\n                          cyan\r\n                          onClick={(e) => {\r\n                            onDelete(e, assignmentList.assignmentId);\r\n                          }}\r\n                        >\r\n                          삭제\r\n                        </StyledButton>\r\n                      </WriteAcitonButtonBlock>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div style={{ marginLeft: '1rem' }}>\r\n        <StyledButton cyan onClick={(e) => goWrite(e)}>\r\n          작성하기\r\n        </StyledButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessorAssignmentList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport Iframe from 'react-iframe';\r\nimport Button from '../../../Component/common/Button';\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2.125rem;\r\n  margin: 1rem 0;\r\n  & + & {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst WriteBtn = styled.button`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  padding: 5px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  margin-right: 30px;\r\n  margin-left: 20px;\r\n  background-color: #d3d31c;\r\n  color: #3e3e3e;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #bfbfbf;\r\n  }\r\n`;\r\n\r\nconst UpdateBtn = styled.button`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  padding: 5px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  margin-right: 30px;\r\n  background-color: #f83636;\r\n  color: #3e3e3e;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #bfbfbf;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  margin-top: 20px;\r\n  margin-left: 20px;\r\n  font-size: 30px;\r\n  border-bottom: 1px solid #f7f9fc;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-style: italic;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  font-size: 2px;\r\n  padding: 5px;\r\n  margin-top: 50px;\r\n  margin-right: 10px;\r\n  background-color: rgba(215, 226, 185, 0.596);\r\n  color: #3e3e3e;\r\n  border-radius: 7px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #bfbfbf;\r\n  }\r\n`;\r\nconst ProblemContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 30px 15px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-shadow: 0 5px 5px 0 #eeeeee;\r\n`;\r\nconst ProblemTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\nconst ProblemContent = styled.div`\r\n  width: 100%;\r\n  margin: 10px auto;\r\n  padding: 0 5px;\r\n`;\r\nconst AnswerInput = styled.textarea`\r\n  height: 60px;\r\n  width: 100%;\r\n  resize: none;\r\n  border: 1px solid #d9d9d9;\r\n  &:focus {\r\n    border: 1px solid #40a9ff;\r\n    box-shadow: 0 0 0 2px #1890ff 20%;\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\n//여기서의 match는 각각의 assignment에 대한 렌더링을 위해서\r\nconst StudentAssignmentDetail = ({ match }) => {\r\n  const user = JSON.parse(window.localStorage.userInfo);\r\n  const userType = user.userType;\r\n  const token = localStorage.getItem('token');\r\n  const [assignments, setAssignments] = useState({});\r\n  const [studentFile, setStudentFile] = useState('');\r\n  const [studentAnswer, setStudentAnswer] = useState('');\r\n  const today = moment();\r\n  const assignmentId = match.params.assignmentId;\r\n  const lectureId = match.params.lectureId;\r\n  const [onGoing, setOnGoing] = useState(false);\r\n  const [submitData, setSubmitData] = useState({});\r\n  const [submitFile, setSubmitFile] = useState('');\r\n  const [studentSubmitFile, setStudentSubmitFile] = useState('');\r\n  const [onSubmit, setOnSubmit] = useState(false);\r\n  const Url = `https://docs.google.com/gview?embedded=true&url=https://oneboard.connect.o-r.kr:8080/lecture/${lectureId}/assignment/${assignmentId}/file`;\r\n  const getData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`/lecture/${lectureId}/assignment/${assignmentId}`)\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          console.log(result);\r\n          setAssignments(result);\r\n          if (today.isBefore(result.endDt) && today.isAfter(result.startDt)) {\r\n            setOnGoing(true);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  const getSubmitData = () => {\r\n    console.log(token);\r\n    console.log(lectureId);\r\n    console.log(assignmentId);\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`/lecture/${lectureId}/assignment/${assignmentId}/submit`, {\r\n          headers: { 'X-AUTH-TOKEN': `${token}` },\r\n        })\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          console.log(result);\r\n          if (result !== null) {\r\n            setSubmitData(result);\r\n            setSubmitFile(result.fileUrl);\r\n            setOnSubmit(true);\r\n          } else {\r\n            console.log(result);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          reject(e);\r\n        });\r\n    });\r\n  };\r\n\r\n  const stateDisplay = (startDate, endDate) => {\r\n    if (today.isBefore(startDate)) {\r\n      return (\r\n        <div style={{ color: '#BFBFBF', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (예정)\r\n        </div>\r\n      );\r\n    } else if (today.isBefore(endDate)) {\r\n      return (\r\n        <div style={{ color: '#61C679', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (진행중)\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ color: '#E24C4B', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (마감)\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getSubmitData();\r\n  }, []);\r\n\r\n  const headersConfig = {\r\n    'X-AUTH-TOKEN': `${token}`,\r\n    'Content-Type': 'multipart/form-data',\r\n  };\r\n\r\n  //수정 필요\r\n  const submitAssignment = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('content', studentAnswer);\r\n    formData.append('file', studentSubmitFile);\r\n    axios\r\n      .post(`/lecture/${lectureId}/assignment/${assignmentId}/submit`, formData, {\r\n        headers: headersConfig,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onChangeAnswer = (e) => {\r\n    setStudentAnswer(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment`);\r\n  };\r\n\r\n  const onFileChange = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.files);\r\n    setStudentSubmitFile(e.target.files[0]);\r\n  };\r\n\r\n  const onUpdate = () => {\r\n    return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment/${assignmentId}/StudentDetail/Update`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title>Assignment</Title>\r\n      <hr\r\n        style={{\r\n          width: '100%',\r\n          margin: '30px 0px',\r\n          marginTop: '50px',\r\n          display: 'block',\r\n          borderColor: '#ffffff',\r\n        }}\r\n      />\r\n      <ProblemContainer>\r\n        <ProblemTitle>제목 : {assignments.title}</ProblemTitle>\r\n        <hr\r\n          style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }}\r\n        />\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            margin: '0',\r\n            padding: '0px 5px',\r\n            fontWeight: '700',\r\n          }}\r\n        >\r\n          <div>{stateDisplay(moment(assignments.startDt), moment(assignments.endDt))}</div>\r\n          <div>배점 {assignments.score}</div>\r\n        </div>\r\n        <ProblemContent>{ReactHtmlParser(assignments.content)}</ProblemContent>\r\n        <hr\r\n          style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }}\r\n        />\r\n      </ProblemContainer>\r\n      <ProblemContainer style={{ margin: '10px auto' }}>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          {onGoing === false ? (\r\n            <ProblemTitle>제출물</ProblemTitle>\r\n          ) : onSubmit ? (\r\n            <ProblemTitle>제출물</ProblemTitle>\r\n          ) : (\r\n            <div>\r\n              <ProblemTitle>과제 제출 작성</ProblemTitle>\r\n              <StyledButton cyan onClick={submitAssignment}>\r\n                제출하기\r\n              </StyledButton>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <hr\r\n          style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }}\r\n        />\r\n        {onGoing === false ? (\r\n          <div>\r\n            <div style={{ display: 'flex' }}>\r\n              <ProblemTitle>{assignments.title}</ProblemTitle>\r\n              <div style={{ fontWeight: '600', fontSize: '20px', marginLeft: 'auto' }}>\r\n                점수 : {submitData.score} / {assignments.score}\r\n              </div>\r\n            </div>\r\n            <hr\r\n              style={{\r\n                width: '100%',\r\n                margin: '10px 0px',\r\n                display: 'block',\r\n                borderColor: '#ffffff',\r\n              }}\r\n            />\r\n            <div>\r\n              <div>{submitData.content}</div>\r\n              <div>\r\n                {submitFile === null ? (\r\n                  <div style={{ marginTop: '10px', fontWeight: 'bold', fontSize: '1.1rem' }}>\r\n                    제출된 과제파일이 없습니다\r\n                  </div>\r\n                ) : (\r\n                  <div style={{ display: 'flex' }}>\r\n                    <div style={{ marginRight: 'auto' }}>\r\n                      <Iframe url={Url} width=\"500px\" height=\"500px\" />\r\n                    </div>\r\n                    <a\r\n                      href={submitFile}\r\n                      style={{\r\n                        marginTop: '10px',\r\n                        fontWeight: 'bold',\r\n                        fontSize: '1.1rem',\r\n                        textDecoration: 'underline',\r\n                      }}\r\n                    >\r\n                      제출된 과제파일\r\n                    </a>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <hr\r\n              style={{\r\n                width: '100%',\r\n                margin: '10px 0px',\r\n                display: 'block',\r\n                borderColor: '#ffffff',\r\n              }}\r\n            />\r\n            <div style={{ fontWeight: '600', fontSize: '20px', color: 'skyblue' }}>\r\n              피드백 :\r\n              <br />\r\n              <br />\r\n              <div style={{ color: 'black' }}>{submitData.feedback}</div>\r\n            </div>\r\n          </div>\r\n        ) : onSubmit ? (\r\n          <div>\r\n            <div style={{ display: 'flex' }}>\r\n              <ProblemTitle>{assignments.title}</ProblemTitle>\r\n              <div style={{ fontWeight: '600', fontSize: '20px', marginLeft: 'auto' }}>\r\n                점수 : {submitData.score} / {assignments.score}\r\n              </div>\r\n            </div>\r\n            <hr\r\n              style={{\r\n                width: '100%',\r\n                margin: '10px 0px',\r\n                display: 'block',\r\n                borderColor: '#ffffff',\r\n              }}\r\n            />\r\n            <div>\r\n              <div style={{ fontSize: '1.0rem' }}>{submitData.content}</div>\r\n              <div>\r\n                {submitFile === null ? (\r\n                  <div style={{ marginTop: '10px', fontWeight: 'bold', fontSize: '1.1rem' }}>\r\n                    제출된 과제파일이 없습니다\r\n                  </div>\r\n                ) : (\r\n                  <div style={{ display: 'flex' }}>\r\n                    <div style={{ marginRight: 'auto' }}>\r\n                      <Iframe url={Url} width=\"500px\" height=\"500px\" />\r\n                    </div>\r\n                    <a\r\n                      href={submitFile}\r\n                      style={{\r\n                        marginTop: '10px',\r\n                        fontWeight: 'bold',\r\n                        fontSize: '1.1rem',\r\n                        textDecoration: 'underline',\r\n                      }}\r\n                    >\r\n                      제출된 과제파일\r\n                    </a>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <hr\r\n              style={{\r\n                width: '100%',\r\n                margin: '10px 0px',\r\n                display: 'block',\r\n                borderColor: '#ffffff',\r\n              }}\r\n            />\r\n            <div style={{ fontWeight: '600', fontSize: '20px', color: 'skyblue' }}>\r\n              피드백 :\r\n              <br />\r\n              <br />\r\n              <div style={{ color: 'black' }}>{submitData.feedback}</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <AnswerInput placeholder=\"과제 답안 작성\" onChange={onChangeAnswer} />\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', margin: '5px 0' }}>\r\n              <div style={{ paddingLeft: '5px', lineHeight: '41.6px' }}>파일 첨부</div>\r\n              <form name=\"noteFile\" encType=\"multipart/form-data\">\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={onFileChange}\r\n                  style={{ height: '41.6px', padding: '5px', margin: '10px', cursor: 'pointer' }}\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </ProblemContainer>\r\n      <div style={{ display: 'flex' }}>\r\n        <StyledButton cyan onClick={onCancel} style={{ marginLeft: '1rem' }}>\r\n          뒤로가기\r\n        </StyledButton>\r\n        {onSubmit === false ? (\r\n          <div></div>\r\n        ) : onGoing ? (\r\n          <StyledButton onClick={onUpdate}>수정하기</StyledButton>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentAssignmentDetail;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nconst ProblemTitle = styled.div`\r\n  width: 100%;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst ScoreInput = styled.input`\r\n  width: 30%;\r\n  border: 1px solid #d9d9d9;\r\n  padding: 10px;\r\n  display: inline-block;\r\n`;\r\nconst ScoreButton = styled.button`\r\n  width: 20%;\r\n  display: inline-block;\r\n  padding: 3px;\r\n  background-color: #22e2cf;\r\n  color: white;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst StudentSubmit = ({ lectureId, assignmentId, assignmentsScore }) => {\r\n  const [studentScore, setStudentScore] = useState(0);\r\n  const [submitAssignments, setSubmitAssignments] = useState([]);\r\n  const user = JSON.parse(localStorage.userInfo);\r\n  const userType = user.userType;\r\n\r\n  const onChangeScore = (e) => {\r\n    //점수만 바꿔서 저장 해주기\r\n  };\r\n\r\n  const getSubmitData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`/lecture/${lectureId}/assignment/${assignmentId}/submits`)\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          setSubmitAssignments(result);\r\n          console.log(result);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSubmitData();\r\n  }, []);\r\n\r\n  const onSubmitAssignment = (e, submitId) => {\r\n    return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment/${assignmentId}/ProfessorDetail/${submitId}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <hr style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }} />\r\n      <ProblemTitle>학생 제출물</ProblemTitle>\r\n      <table\r\n        style={{\r\n          width: '100%',\r\n          margin: '10px auto',\r\n          borderTop: '1px solid #D5D5D5',\r\n          textAlign: 'center',\r\n          borderSpacing: '0px 10px',\r\n          borderCollapse: 'separate',\r\n        }}\r\n      >\r\n        <thead\r\n          style={{\r\n            borderBottom: '1px solid #D5D5D5',\r\n            fontStyle: 'bold',\r\n            fontWeight: '500',\r\n            backgroundColor: '#f3f3f3',\r\n          }}\r\n        >\r\n          <tr>\r\n            <th style={{ padding: '10px 0', width: '20%' }}>이름</th>\r\n            <th style={{ padding: '10px 0', width: '30%' }}>내용</th>\r\n            <th style={{ padding: '10px 0', width: '20%' }}>첨부파일</th>\r\n            <th style={{ padding: '10px 0', width: '30%' }}>점수</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {submitAssignments.map((submitAssignment, index) => (\r\n            <tr\r\n              style={{\r\n                borderRadius: '5px',\r\n                boxShadow: '0px 2px 2px 1px #eeeeee',\r\n              }}\r\n            >\r\n              <td\r\n                style={{\r\n                  padding: '10px 0',\r\n                  backgroundColor: 'white',\r\n                  borderRadius: '5px 0 0 5px',\r\n                }}\r\n              >\r\n                {submitAssignment.userName}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  padding: '10px 0',\r\n                  backgroundColor: 'white',\r\n                  cursor: 'pointer',\r\n                  fontWeight: 'bold',\r\n                  textDecoration: 'underline',\r\n                }}\r\n                onClick={(e) => onSubmitAssignment(e, submitAssignment.submitId)}\r\n              >\r\n                {submitAssignment.content}\r\n              </td>\r\n              <td style={{ padding: '10px 0', backgroundColor: 'white' }}>\r\n                {submitAssignment.fileUrl}\r\n              </td>\r\n              <td style={{ padding: '10px 0', backgroundColor: 'white' }}>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    margin: '0',\r\n                    padding: '0 5px',\r\n                  }}\r\n                >\r\n                  <div style={{ paddingLeft: '100px' }}>\r\n                    <ScoreInput onChange={onChangeScore} placeholder={submitAssignment.score} />\r\n                    <span style={{ width: '20%' }}> / {assignmentsScore}</span>\r\n                  </div>\r\n                  <ScoreButton onClick={(e) => onChangeScore(index, studentScore)}>\r\n                    수정\r\n                  </ScoreButton>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentSubmit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport StudentSubmit from './StudentSubmit';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport moment from 'moment';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: inline-block;\r\n  margin: 10px auto;\r\n  padding: 0px 20px;\r\n  //overflow-y: auto;\r\n  //align-items : center;\r\n  //justify-content : center;\r\n`;\r\nconst Title = styled.div`\r\n  margin-top: 20px;\r\n  margin-left: 20px;\r\n  font-size: 30px;\r\n  border-bottom: 1px solid #f7f9fc;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-style: italic;\r\n`;\r\nconst SubTitle = styled.div`\r\n  float: left;\r\n  margin-top: 3px;\r\n  margin-right: 20px;\r\n  color: #8b8b8b;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n`;\r\nconst Btn = styled.button`\r\n  font-size: 2px;\r\n  padding: 5px;\r\n  margin-top: 50px;\r\n  margin-right: 10px;\r\n  background-color: rgba(215, 226, 185, 0.596);\r\n  color: #3e3e3e;\r\n  border-radius: 7px;\r\n  &:hover {\r\n    background-color: #bfbfbf;\r\n  }\r\n`;\r\nconst ProblemContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 30px 15px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-shadow: 0 5px 5px 0 #eeeeee;\r\n`;\r\nconst ProblemTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\nconst ProblemContent = styled.div`\r\n  width: 100%;\r\n  margin: 10px auto;\r\n  padding: 0 5px;\r\n`;\r\nconst FeedbackInput = styled.textarea`\r\n  height: 60px;\r\n  width: 100%;\r\n  resize: none;\r\n  border: 1px solid #d9d9d9;\r\n  &:focus {\r\n    border: 1px solid #40a9ff;\r\n    box-shadow: 0 0 0 2px #1890ff 20%;\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nconst ScoreInput = styled.input`\r\n  width: 50px;\r\n  border: 1px solid #d9d9d9;\r\n  padding: 10px;\r\n  display: inline-block;\r\n`;\r\n\r\nconst StudentSubmitDetail = ({ match }) => {\r\n  const [score, setScore] = useState(0);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [submitAssignments, setSubmitAssignments] = useState([]);\r\n  const [assignments, setAssignments] = useState([]);\r\n  const lectureId = match.params.lectureId;\r\n  const submitId = match.params.submitId;\r\n  const assignmentId = match.params.assignmentId;\r\n  const user = JSON.parse(localStorage.userInfo);\r\n  const userType = user.userType;\r\n\r\n  // const submitId = match.params.submitId;\r\n\r\n  const stateDisplay = (startDate, endDate) => {\r\n    const today = moment();\r\n\r\n    if (today.isBefore(startDate)) {\r\n      return (\r\n        <div style={{ color: '#BFBFBF', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (예정)\r\n        </div>\r\n      );\r\n    } else if (today.isBefore(endDate)) {\r\n      return (\r\n        <div style={{ color: '#61C679', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (진행중)\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ color: '#E24C4B', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (마감)\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getSubmitAssignmentData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      //submit ID 수정해주기\r\n      axios\r\n        .get(`/lecture/${lectureId}/assignment/${assignmentId}/submit/${submitId}`)\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          console.log(result);\r\n          setSubmitAssignments(result);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  const getAssignmentData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`/lecture/${lectureId}/assignment/${assignmentId}`)\r\n        .then((res) => {\r\n          const assignmentResult = res.data.data;\r\n          setAssignments(assignmentResult);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSubmitAssignmentData()\r\n    getAssignmentData();\r\n    console.log(submitId);\r\n  }, []);\r\n\r\n  const onCancel = () => {\r\n    return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment/${assignmentId}/ProfessorDetail`);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    //post 함수\r\n    axios\r\n      .post(`/lecture/${lectureId}/assignment/${assignmentId}/submit/${submitId}`, {\r\n        score: score,\r\n        feedback: feedback,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment/${assignmentId}/ProfessorDetail`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getFeedback = (e) => {\r\n    setFeedback(e.target.value);\r\n\r\n    console.log(feedback);\r\n  };\r\n\r\n  const getScore = (e) => {\r\n    if (e.target.value > assignments.score) {\r\n      alert('배점보다 높게 점수를 입력할 수 없습니다.');\r\n      window.location.reload();\r\n    } else {\r\n      setScore(e.target.value);\r\n    }\r\n    console.log(score);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Assignment</Title>\r\n      <hr\r\n        style={{\r\n          width: '100%',\r\n          margin: '30px 0px',\r\n          marginTop: '50px',\r\n          display: 'block',\r\n          borderColor: '#ffffff',\r\n        }}\r\n      />\r\n      <ProblemContainer>\r\n        <ProblemTitle>{assignments.title}</ProblemTitle>\r\n        <hr\r\n          style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }}\r\n        />\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            margin: '0',\r\n            padding: '0px 5px',\r\n            fontWeight: '700',\r\n          }}\r\n        >\r\n          <div>{stateDisplay(moment(assignments.startDt), moment(assignments.endDt))}</div>\r\n          <div>배점 {assignments.score}</div>\r\n        </div>\r\n        <ProblemContent>{ReactHtmlParser(assignments.content)}</ProblemContent>\r\n        <hr\r\n          style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }}\r\n        />\r\n      </ProblemContainer>\r\n      <hr style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }} />\r\n      {/* 여기에 이제 학생 제출물 보는 부분 들어가주면 됨  */}\r\n      <hr style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }} />\r\n      <div>\r\n        <ScoreInput onChange={getScore} /> / {assignments.score}\r\n      </div>\r\n      <hr style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }} />\r\n      <FeedbackInput onChange={getFeedback} placeholder=\"점수에 대한 피드백을 작성해주세요\" />\r\n      <Btn onClick={onSubmit}>저장</Btn>\r\n      <Btn onClick={onCancel}>취소</Btn>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StudentSubmitDetail;\r\n","import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport palette from '../../../lib/styles/palette';\r\nimport Button from '../../../Component/common/Button';\r\nimport { withRouter } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'antd/dist/antd.css';\r\nimport { DatePicker, Space } from 'antd';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst TitleInput = styled.input`\r\n  font-size: 2rem;\r\n  outline: none;\r\n  padding-bottom: 0.5rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${palette.gray[4]};\r\n  margin-bottom: 2rem;\r\n  margin-top: 10px;\r\n  width: 100%;\r\n`;\r\n\r\nconst WriteAcitonButtonBlock = styled.div`\r\n  margin-top: 3rem;\r\n  margin-bottom: 3rem;\r\n  button + button {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2.125rem;\r\n  & + & {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst ScoreInput = styled.input`\r\n  margin: 5px 0px;\r\n  border-radius: 3px;\r\n  height: 31.6px;\r\n  border: 1px solid #d9d9d9;\r\n  padding: 0px 10px;\r\n  &:focus {\r\n    border: 1px solid #40a9ff;\r\n    box-shadow: 0 0 0 2px #1890ff 20%;\r\n    outline: 0;\r\n  }\r\n  &::-webkit-outer-spin-button,\r\n  &::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  margin: 0 auto;\r\n  width: 80%;\r\n  box-shadow: 0 5px 5px 0 #eeeeee;\r\n`;\r\nconst Container = styled.div`\r\n  width: 97%;\r\n  display: block;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 10px auto;\r\n  padding: 0 20px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst UpdateAssignment = ({ history, match }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [period, setPeriod] = useState('');\r\n  const [files, setFiles] = useState('');\r\n  const [exposeDt, setExposeDt] = useState('');\r\n  const [score, setScore] = useState(0);\r\n\r\n  const lectureId = match.params.lectureId;\r\n  const assignmentId = match.params.assignmentId;\r\n  const user = JSON.parse(localStorage.userInfo);\r\n  const userType = user.userType;\r\n  const [assignmentScore, setAssignmentScore] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchUpdateAssignment = async () => {\r\n      try {\r\n        await axios\r\n          .get(`/lecture/${lectureId}/assignment/` + assignmentId)\r\n          .then((res) => {\r\n            const result = res.data.data;\r\n            setTitle(result.title);\r\n            setContent(result.content);\r\n            setAssignmentScore(result.score);\r\n            console.log(result);\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n          });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchUpdateAssignment();\r\n  }, []);\r\n\r\n  const getTitle = (e) => {\r\n    setTitle(e.target.value);\r\n    console.log(title);\r\n  };\r\n\r\n  const onChangePeriod = (e, dateString) => {\r\n    setPeriod({\r\n      ...period,\r\n      start: dateString[0],\r\n      end: dateString[1],\r\n    });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    console.log('title : ' + title);\r\n    console.log('content : ' + content);\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('content', content);\r\n    formData.append('file', files);\r\n    formData.append('startDt', period.start);\r\n    formData.append('endDt', period.end);\r\n    formData.append('score', score);\r\n    formData.append('exposeDt', exposeDt);\r\n    axios\r\n      .put(`/lecture/${lectureId}/assignment/` + assignmentId, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(score);\r\n        return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment`);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.goback();\r\n  };\r\n\r\n  const handleText = (editor) => {\r\n    console.log(editor);\r\n    setContent(editor);\r\n  };\r\n\r\n  const onFileChange = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.files);\r\n    setFiles(e.target.files[0]);\r\n  };\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      //[{ 'font': [] }],\r\n      [{ header: [1, 2, false] }],\r\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n      [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\r\n      ['link', 'image'],\r\n      [{ align: [] }, { color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      ['clean'],\r\n    ],\r\n  };\r\n\r\n  const format = [\r\n    'header',\r\n    'bold',\r\n    'italic',\r\n    'underline',\r\n    'strike',\r\n    'blockquote',\r\n    'list',\r\n    'bullet',\r\n    'indent',\r\n    'link',\r\n    'image',\r\n    'align',\r\n    'color',\r\n    'background',\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      <hr\r\n        style={{\r\n          width: '100%',\r\n          margin: '30px 0px',\r\n          marginTop: '50px',\r\n          display: 'block',\r\n          borderColor: '#ffffff',\r\n        }}\r\n      />\r\n      <ListContainer>\r\n        <TitleInput onChange={getTitle} value={title} />\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <div style={{ paddingLeft: '5px', lineHeight: '31.6px' }}>과제 기한</div>\r\n          <div>\r\n            <RangePicker\r\n              showTime={{\r\n                hideDisabledOptions: true,\r\n                defaultValue: [moment('00:00:00', 'HH:mm:ss'), moment('23:59:59', 'HH:mm:ss')],\r\n              }}\r\n              format=\"YYYY-MM-DD HH:mm:ss\"\r\n              onChange={onChangePeriod}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', margin: '5px 0' }}>\r\n          <div style={{ paddingLeft: '5px', lineHeight: '41.6px' }}>배점</div>\r\n          <ScoreInput\r\n            type=\"number\"\r\n            onChange={(e) => setScore(e.target.value)}\r\n            value={assignmentScore}\r\n          />\r\n        </div>\r\n        <hr\r\n          style={{\r\n            width: '100%',\r\n            margin: '30px 0px',\r\n            marginTop: '50px',\r\n            display: 'block',\r\n            borderColor: '#ffffff',\r\n          }}\r\n        />\r\n        <div>과제 파일 선택 </div>\r\n        <form name=\"planfile\" encType=\"multipart/form-data\" onSubmit={onSubmit}>\r\n          <input style={{ margin: '5px' }} type=\"file\" onChange={onFileChange} />\r\n        </form>\r\n        <ReactQuill\r\n          style={{ height: '650px' }}\r\n          theme=\"snow\"\r\n          modules={modules}\r\n          formats={format}\r\n          value={content}\r\n          onChange={(content, delta, source, editor) => handleText(editor.getHTML())}\r\n        />\r\n        <WriteAcitonButtonBlock>\r\n          <StyledButton cyan onClick={onSubmit}>\r\n            과제 및 시험 수정\r\n          </StyledButton>\r\n          <StyledButton onClick={onCancel}>취소</StyledButton>\r\n        </WriteAcitonButtonBlock>\r\n      </ListContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(UpdateAssignment);\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: inline-block;\r\n  margin: 10px auto;\r\n  padding: 0px 20px;\r\n  //overflow-y: auto;\r\n  //align-items : center;\r\n  //justify-content : center;\r\n`;\r\n\r\nconst Line = styled.hr`\r\n  width: 100%;\r\n  margin: 10px 0px;\r\n  display: block;\r\n  border-color: #ffffff;\r\n`;\r\n\r\nconst WriteBtn = styled.button`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  padding: 5px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  margin-right: 30px;\r\n  margin-left: 20px;\r\n  background-color: #d3d31c;\r\n  color: #3e3e3e;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #bfbfbf;\r\n  }\r\n`;\r\n\r\nconst UpdateBtn = styled.button`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  padding: 5px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  margin-right: 30px;\r\n  background-color: #f83636;\r\n  color: #3e3e3e;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #bfbfbf;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  margin-top: 20px;\r\n  margin-left: 20px;\r\n  font-size: 30px;\r\n  border-bottom: 1px solid #f7f9fc;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-style: italic;\r\n`;\r\nconst SubTitle = styled.div`\r\n  float: left;\r\n  margin-top: 3px;\r\n  margin-right: 20px;\r\n  color: #8b8b8b;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n`;\r\nconst Btn = styled.button`\r\n  font-size: 2px;\r\n  padding: 5px;\r\n  margin-top: 50px;\r\n  margin-right: 10px;\r\n  background-color: rgba(215, 226, 185, 0.596);\r\n  color: #3e3e3e;\r\n  border-radius: 7px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #bfbfbf;\r\n  }\r\n`;\r\nconst ProblemContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 30px 15px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-shadow: 0 5px 5px 0 #eeeeee;\r\n`;\r\nconst ProblemTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\nconst ProblemContent = styled.div`\r\n  width: 100%;\r\n  margin: 10px auto;\r\n  padding: 0 5px;\r\n`;\r\nconst AnswerInput = styled.textarea`\r\n  height: 60px;\r\n  width: 100%;\r\n  resize: none;\r\n  border: 1px solid #d9d9d9;\r\n  &:focus {\r\n    border: 1px solid #40a9ff;\r\n    box-shadow: 0 0 0 2px #1890ff 20%;\r\n    outline: 0;\r\n  }\r\n`;\r\nconst UpdateStudentAssignment = ({ match }) => {\r\n  const user = JSON.parse(window.localStorage.userInfo);\r\n  const userType = user.userType;\r\n  const token = localStorage.getItem('token');\r\n  const today = moment();\r\n  const lectureId = match.params.lectureId;\r\n  const assignmentId = match.params.assignmentId;\r\n  const [assignments, setAssignments] = useState({});\r\n  const [studentAnswer, setStudentAnswer] = useState('');\r\n  const [submitData, setSubmitData] = useState({});\r\n  const [studentSubmitFile, setStudentSubmitFile] = useState('');\r\n  const getData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`/lecture/${lectureId}/assignment/${assignmentId}`)\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          console.log(result);\r\n          setAssignments(result);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  const getSubmitData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`/lecture/${lectureId}/assignment/${assignmentId}/submit`, {\r\n          headers: { 'X-AUTH-TOKEN': `${token}` },\r\n        })\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          console.log(result);\r\n          setSubmitData(result);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  const stateDisplay = (startDate, endDate) => {\r\n    if (today.isBefore(startDate)) {\r\n      return (\r\n        <div style={{ color: '#BFBFBF', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (예정)\r\n        </div>\r\n      );\r\n    } else if (today.isBefore(endDate)) {\r\n      return (\r\n        <div style={{ color: '#61C679', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (진행중)\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ color: '#E24C4B', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (마감)\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const headersConfig = {\r\n    'X-AUTH-TOKEN': `${token}`,\r\n    'Content-Type': 'multipart/form-data',\r\n  };\r\n\r\n  const submitAssignment = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('content', studentAnswer);\r\n    formData.append('file', studentSubmitFile);\r\n    axios\r\n      .put(`/lecture/${lectureId}/assignment/${assignmentId}/submit`, formData, {\r\n        headers: headersConfig,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onChangeAnswer = (e) => {\r\n    setStudentAnswer(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment`);\r\n  };\r\n\r\n  const onFileChange = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.files);\r\n    setStudentSubmitFile(e.target.files[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getSubmitData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Title>Assignment</Title>\r\n      <Line />\r\n      <ProblemContainer>\r\n        <ProblemTitle>제목 : {assignments.title}</ProblemTitle>\r\n        <Line />\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            margin: '0',\r\n            padding: '0px 5px',\r\n            fontWeight: '700',\r\n          }}\r\n        >\r\n          <div>{stateDisplay(moment(assignments.startDt), moment(assignments.endDt))}</div>\r\n          <div>배점 {assignments.score}</div>\r\n        </div>\r\n        <ProblemContent>{ReactHtmlParser(assignments.content)}</ProblemContent>\r\n        <Line />\r\n      </ProblemContainer>\r\n      <ProblemContainer style={{ margin: '10px auto' }}>\r\n        <ProblemTitle>과제 제출 작성</ProblemTitle>\r\n\r\n        <Line />\r\n        <div>\r\n          <AnswerInput onChange={onChangeAnswer} />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', margin: '5px 0' }}>\r\n            <div style={{ paddingLeft: '5px', lineHeight: '41.6px' }}>파일 첨부</div>\r\n            <form name=\"noteFile\" encType=\"multipart/form-data\">\r\n              <input\r\n                type=\"file\"\r\n                onChange={onFileChange}\r\n                style={{ height: '41.6px', padding: '5px', margin: '10px', cursor: 'pointer' }}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </ProblemContainer>\r\n      <div>\r\n        <WriteBtn onClick={onCancel}>뒤로가기</WriteBtn>\r\n        <Btn onClick={submitAssignment}>수정하기</Btn>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateStudentAssignment;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport Iframe from 'react-iframe';\r\nimport Button from '../../../Component/common/Button';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst TTitle = styled.div`\r\n  font-size: 30px;\r\n  margin-left: 15px;\r\n  margin-top: 15px;\r\n  border-bottom: 1px solid #f7f9fc;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-style: italic;\r\n  text-align: left;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2.3rem;\r\n  margin-left: 1rem;\r\n  & + & {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst TabletrColor = styled.tr`\r\n  &:nth-child(even) {\r\n    background: #f7f9fc;\r\n  }\r\n`;\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst LessonDetail = ({ match }) => {\r\n  const lessonId = match.params.lessonId;\r\n  const lectureId = match.params.lectureId;\r\n  const [isProfessor, setIsProfessor] = useState(false);\r\n  const [lessonDetails, setLessonDetails] = useState([]);\r\n  const [studentInfo, setStudentInfo] = useState([]);\r\n  const [sessionId, setSessionId] = useState('');\r\n  const user = JSON.parse(localStorage.userInfo);\r\n  const userType = user.userType;\r\n  const Url = `https://docs.google.com/gview?embedded=true&url=https://115.85.182.194:8080/lecture/${lectureId}/lesson/${lessonId}/note`;\r\n  const FileURL = `https://115.85.182.194:8080/lecture/${lectureId}/lesson/${lessonId}/note`;\r\n  const labels = ['출석', '결석', '지각'];\r\n  const LessonLink = `/class/${lectureId}/${lessonId}/${sessionId}/${userType}`;\r\n  const token = localStorage.getItem('token');\r\n\r\n  const getLessonData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`lecture/${lectureId}/lesson/${lessonId}`)\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          setLessonDetails(result);\r\n          setSessionId(result.session);\r\n          console.log(result);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  const LessonCheck = () => {\r\n     return (window.location.href = `/class/${lectureId}/${lessonId}/${sessionId}/${userType}`);\r\n    // return new Promise((resolve, reject) => {\r\n    //   axios\r\n    //     .get(`/lecture/${lectureId}/lesson/${lessonId}/live/entrance`, {\r\n    //       headers: { 'X-AUTH-TOKEN': `${token}` },\r\n    //       params: { session: `${sessionId}` },\r\n    //     })\r\n    //     .then((res) => {\r\n    //       const result = res;\r\n    //       console.log(result);\r\n    //       if (result.data.result === 'SUCCESS') {\r\n    //         return (window.location.href = `/class/${lectureId}/${lessonId}/${sessionId}/${userType}`);\r\n    //       } else {\r\n    //         alert('수업에 입장할 수 없습니다.');\r\n    //       }\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.log(error);\r\n    //       reject(error);\r\n    //     });\r\n    // });\r\n  };\r\n\r\n  const getLessonAttendanceData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`lecture/${lectureId}/lesson/${lessonId}/attendances`)\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          console.log(result);\r\n          setStudentInfo(result);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  const checkIsProfessor = () => {\r\n    if (userType === 'T') {\r\n      setIsProfessor(true);\r\n    } else setIsProfessor(false);\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: '수업 출석 현황',\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: '학생 수',\r\n        data: [\r\n          studentInfo.filter((ex) => ex.attendanceList[0].status === 2).length,\r\n          studentInfo.filter((ex) => ex.attendanceList[0].status === 0).length,\r\n          studentInfo.filter((ex) => ex.attendanceList[0].status === 1).length,\r\n        ],\r\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLessonData();\r\n    getLessonAttendanceData();\r\n    checkIsProfessor();\r\n    console.log(studentInfo.map((ex, index) => ex.attendanceList.map((ex2, index) => ex2.status)));\r\n  }, []);\r\n\r\n  const onCancel = () => {\r\n    return (window.location.href = `/Main/Lecture/${lectureId}/Lesson`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex' }}>\r\n        <TTitle>{lessonDetails.title}</TTitle>\r\n        <div\r\n          style={{\r\n            fontSize: '1.3rem',\r\n            marginTop: '1.5rem',\r\n            marginRight: '15px',\r\n            marginLeft: '2rem',\r\n          }}\r\n        >\r\n          강의 날짜 : {lessonDetails.date}\r\n        </div>\r\n        <div\r\n          style={{\r\n            fontSize: '1.3rem',\r\n            marginTop: '1.5rem',\r\n            marginRight: '15px',\r\n            marginLeft: '2rem',\r\n            display: 'flex',\r\n          }}\r\n        >\r\n          수업 타입 :\r\n          {lessonDetails.type === 2 ? (\r\n            <div style={{ marginLeft: '15px' }}>대면 수업</div>\r\n          ) : lessonDetails.type === 1 ? (\r\n            <div style={{ marginLeft: '15px' }}>비대면 실시간 수업</div>\r\n          ) : (\r\n            <div style={{ marginLeft: '15px' }}>녹화 강의</div>\r\n          )}\r\n        </div>\r\n        {userType === 'S' ? (\r\n          <div\r\n            style={{\r\n              fontSize: '1.3rem',\r\n              marginTop: '1.5rem',\r\n              marginRight: '50px',\r\n              marginLeft: 'auto',\r\n            }}\r\n          >\r\n            출석 정보\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n      <hr style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }} />\r\n\r\n      <div style={{ display: 'flex', marginLeft: '1rem' }}>\r\n        <div\r\n          style={{\r\n            fontSize: '1rem',\r\n            paddingBottom: '0.5rem',\r\n            marginBottom: '2rem',\r\n            marginTop: '15px',\r\n            marginRight: '15px',\r\n            fontWeight: 'bold',\r\n            display: 'flex',\r\n          }}\r\n        >\r\n          강의 노트 :{' '}\r\n          {lessonDetails.noteUrl === null ? (\r\n            <div style={{ color: 'red', marginLeft: '1rem' }}>등록된 강의노트가 없습니다</div>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                textDecoration: 'underline',\r\n                color: 'skyblue',\r\n                marginLeft: '1rem',\r\n              }}\r\n            >\r\n              <a href={FileURL}>{lessonDetails.title} 강의노트 다운로드</a>\r\n              <div>\r\n                <Iframe url={Url} width=\"700px\" height=\"400px\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {lessonDetails.type === 1 ? (\r\n          <div\r\n            style={{\r\n              fontSize: '1rem',\r\n              paddingBottom: '0.5rem',\r\n              marginBottom: '2rem',\r\n              marginTop: '15px',\r\n              marginRight: '15px',\r\n              fontWeight: 'bold',\r\n              marginLeft: '15px',\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            {isProfessor ? (\r\n              <div style={{ cursor: 'pointer' }} onClick={LessonCheck}>\r\n                실시간 수업입장\r\n              </div>\r\n            ) : (\r\n              <div style={{ cursor: 'pointer' }} onClick={LessonCheck}>\r\n                실시간 수업입장\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : lessonDetails.type === 2 ? (\r\n          <div\r\n            style={{\r\n              fontSize: '1rem',\r\n              paddingBottom: '0.5rem',\r\n              marginBottom: '2rem',\r\n              marginTop: '15px',\r\n              marginRight: '15px',\r\n              fontWeight: 'bold',\r\n              marginLeft: '15px',\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            강의실 정보 : {lessonDetails.room}\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              fontSize: '1rem',\r\n              paddingBottom: '0.5rem',\r\n              marginBottom: '2rem',\r\n              marginTop: '15px',\r\n              marginRight: '15px',\r\n              fontWeight: 'bold',\r\n              marginLeft: '15px',\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            녹화 강의 : {lessonDetails.videoUrl}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <hr style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }} />\r\n      {userType === 'S' ? (\r\n        <div></div>\r\n      ) : (\r\n        <>\r\n          <div style={{ display: 'flex' }}>\r\n            <div style={{ width: '50%' }}>\r\n              <Bar options={options} data={data} />\r\n            </div>\r\n            <div style={{ width: '50%', marginLeft: '1rem' }}>\r\n              {/* <WriteAcitonButtonBlock>\r\n                  <StyledButton cyan onClick={}>일괄 결석</StyledButton>\r\n                <StyledButton cyan onClick={}>일괄 출석</StyledButton>\r\n              </WriteAcitonButtonBlock> */}\r\n              <table\r\n                style={{\r\n                  width: '100%',\r\n                  textAlign: 'center',\r\n                  marginRight: '5px',\r\n                  borderRight: '1px solid #D5D5D5',\r\n                }}\r\n              >\r\n                <thead\r\n                  style={{\r\n                    borderBottom: '1px solid #D5D5D5',\r\n                    fontWeight: 'bold',\r\n                    fontWeight: '500',\r\n                    backgroundColor: '#f3f3f3',\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <th style={{ padding: '10px 0', width: 'auto' }}>이름</th>\r\n                    <th style={{ padding: '10px 0', width: 'auto' }}>학번</th>\r\n                    <th style={{ padding: '10px 0', width: 'auto' }}>출결</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {studentInfo.map((studentList, index) => (\r\n                    <TabletrColor key={index}>\r\n                      <td style={{ padding: '10px 0', borderBottom: '1px solid #D5D5D5' }}>\r\n                        {studentList.studentName}\r\n                      </td>\r\n                      <td style={{ padding: '10px 0', borderBottom: '1px solid #D5D5D5' }}>\r\n                        {studentList.studentNumber}\r\n                      </td>\r\n                      <td style={{ padding: '10px 0', borderBottom: '1px solid #D5D5D5' }}>\r\n                        {studentList.attendanceList[0].status === 2 ? (\r\n                          <div style={{ color: 'green', fontWeight: 'bold' }}>출석</div>\r\n                        ) : studentList.attendanceList[0].status === 1 ? (\r\n                          <div style={{ color: 'yellowgreen', fontWeight: 'bold' }}>지각</div>\r\n                        ) : (\r\n                          <div style={{ color: 'red', fontWeight: 'bold' }}>결석</div>\r\n                        )}\r\n                      </td>\r\n                    </TabletrColor>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <hr\r\n            style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }}\r\n          />\r\n        </>\r\n      )}\r\n      <div style={{ height: '5rem' }}>\r\n        <StyledButton cyan onClick={onCancel}>\r\n          뒤로가기\r\n        </StyledButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LessonDetail;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\n\r\nconst ModalWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  display: ${(props) => (props.visible ? 'block' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  overflow: auto;\r\n  outline: 0;\r\n`\r\n\r\nconst ModalOverlay = styled.div`\r\n  box-sizing: border-box;\r\n  display: ${(props) => (props.visible ? 'block' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  z-index: 999;\r\n`\r\n\r\nconst ModalInner = styled.div`\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  width: 360px;\r\n  max-width: 480px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  margin: 0 auto;\r\n  padding: 40px+ 20px;\r\n  height:500px;\r\n  text-align: center;\r\n`\r\nconst CloseBtn = styled.button`\r\n  height: 3rem;\r\n  width:100px;\r\n  color: red;\r\n  margin-left: auto;\r\n  margin-right: 2rem;\r\n  margin-top: 150px;\r\n`\r\nconst OkBtn = styled.button`\r\n  height: 3rem;\r\n  width:100px;\r\n  color: red;\r\n  margin-left: auto;\r\n  margin-right: 2rem;\r\n  margin-top: 150px;\r\n`\r\n\r\nQuizModal.propTypes = {\r\n  visible: PropTypes.bool,\r\n}\r\n\r\nfunction QuizModal({ className,\r\n  onClose,\r\n  maskClosable,\r\n  closable,\r\n  visible,\r\n  children,\r\n  lessonId,\r\n  sessionId,\r\n  lectureId,\r\n  }) {\r\n  \r\n   const onMaskClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose(e)\r\n    }\r\n  }\r\n\r\n  const close = (e) => {\r\n    if (onClose) {\r\n      onClose(e)\r\n    }\r\n  }\r\n\r\n  const onSubmit = () => {\r\n     axios.post(`/lecture/${lectureId}/lesson/${lessonId}/live/quiz/professor`, {\r\n      \"question\": \"김동현\",\r\n      \"answer1\": \"test1\",\r\n      \"answer2\": \"test1\",\r\n      \"answer3\": \"test1\",\r\n      \"answer4\": \"test1\",\r\n      \"answer5\": \"test1\",\r\n      \"answer\": 1,\r\n      \r\n    }, { params: { session: `${sessionId}` } })\r\n      .then((res) => {\r\n        console.log(res.data.data);\r\n        const result = res.data.data\r\n      })\r\n      .catch((error) => {\r\n      console.log(error);\r\n      \r\n    })\r\n  }\r\n\r\n    return (\r\n        <>\r\n            <ModalOverlay visible={visible} />\r\n      <ModalWrapper\r\n        className={className}\r\n        onClick={maskClosable ? onMaskClick : null}\r\n        tabIndex=\"-1\"\r\n        visible={visible}\r\n      >\r\n          <ModalInner tabIndex=\"0\" className=\"modal-inner\">\r\n          <div>\r\n            <div>\r\n          {children}\r\n          </div>\r\n              <br />\r\n              <div style={{marginTop:\"1rem\"}}>1.</div>\r\n              <div style={{marginTop:\"1rem\"}}>2.</div>\r\n              <div style={{marginTop:\"1rem\"}}>3.</div>\r\n              <div style={{marginTop:\"1rem\"}}>4.</div>\r\n              <div style={{marginTop:\"1rem\"}}>5.</div>\r\n              <div style={{marginTop:\"1rem\"}}>정답 번호 체크</div>\r\n              \r\n          <div style={{display:\"flex\"}}>\r\n                {closable && <OkBtn className=\"modal-ok\" onClick={onSubmit}>확인</OkBtn>}\r\n                {closable && <CloseBtn className=\"modal-close\" onClick={close} >취소</CloseBtn>}\r\n          </div>\r\n          </div>\r\n        </ModalInner>\r\n      </ModalWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizModal;\r\n","import React, {\n  useState,\n  useCallback,\n  useContext,\n  useEffect,\n  MutableRefObject,\n} from 'react';\nimport classNames from 'classnames';\nimport { message } from 'antd';\nimport ZoomContext from '../../../context/zoom-context';\nimport CameraButton from './camera';\nimport MicrophoneButton from './microphone';\nimport { ScreenShareButton, ScreenShareLockButton } from './screen-share';\nimport ZoomMediaContext from '../../../context/media-context';\nimport { useUnmount } from '../../../hooks';\nimport { MediaDevice } from '../video-types';\nimport './video-footer.scss';\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport socketio from 'socket.io-client';\n\nconst LeaveBtn = styled.button`\n  position: absolute;\n  margin-top:3rem;\n  right: 0;\n  margin-right: 30px;\n  color: red;\n`;\n\ninterface VideoFooterProps {\n  className?: string;\n  shareRef?: MutableRefObject<HTMLCanvasElement | null>;\n  sharing?: boolean;\n  lectureId: string;\n  lessonId: string;\n  sessionId: string;\n}\nconst isAudioEnable = typeof AudioWorklet === 'function';\nconst VideoFooter = (props: VideoFooterProps) => {\n  const { className, shareRef, sharing ,lectureId,lessonId,sessionId } = props;\n  const [isStartedAudio, setIsStartedAudio] = useState(false);\n  const [isStartedVideo, setIsStartedVideo] = useState(false);\n  const [isStartedScreenShare, setIsStartedScreenShare] = useState(false);\n  const [isLockedScreenShare, setIsLockedScreenShare] = useState(false);\n  const [isMuted, setIsMuted] = useState(true);\n  const [activeMicrophone, setActiveMicrophone] = useState('');\n  const [activeSpeaker, setActiveSpeaker] = useState('');\n  const [activeCamera, setActiveCamera] = useState('');\n  const [micList, setMicList] = useState<MediaDevice[]>([]);\n  const [speakerList, setSpeakerList] = useState<MediaDevice[]>([]);\n  const [cameraList, setCameraList] = useState<MediaDevice[]>([]);\n  const { mediaStream } = useContext(ZoomMediaContext);\n  const zmClient = useContext(ZoomContext);\n  const user = JSON.parse(localStorage.userInfo);\n  const userType = user.userType;\n  const token = localStorage.getItem(\"token\")\n  const onCameraClick = useCallback(async () => {\n    if (isStartedVideo) {\n      await mediaStream?.stopVideo();\n      setIsStartedVideo(false);\n    } else {\n      await mediaStream?.startVideo();\n      setIsStartedVideo(true);\n    }\n  }, [mediaStream, isStartedVideo]);\n  const onMicrophoneClick = useCallback(async () => {\n    if (isStartedAudio) {\n      if (isMuted) {\n        await mediaStream?.unmuteAudio();\n        setIsMuted(false);\n      } else {\n        await mediaStream?.muteAudio();\n        setIsMuted(true);\n      }\n    } else {\n      await mediaStream?.startAudio();\n      setIsStartedAudio(true);\n    }\n  }, [mediaStream, isStartedAudio, isMuted]);\n  const onMicrophoneMenuClick = async (key: string) => {\n    if (mediaStream) {\n      const [type, deviceId] = key.split('|');\n      if (type === 'microphone') {\n        if (deviceId !== activeMicrophone) {\n          await mediaStream.switchMicrophone(deviceId);\n          setActiveMicrophone(mediaStream.getActiveMicrophone());\n        }\n      } else if (type === 'speaker') {\n        if (deviceId !== activeSpeaker) {\n          await mediaStream.switchSpeaker(deviceId);\n          setActiveSpeaker(mediaStream.getActiveSpeaker());\n        }\n      } else if (type === 'leave audio') {\n        await mediaStream.stopAudio();\n        setIsStartedAudio(false);\n      }\n    }\n  };\n  const onSwitchCamera = async (key: string) => {\n    if (mediaStream) {\n      if (activeCamera !== key) {\n        await mediaStream.switchCamera(key);\n        setActiveCamera(mediaStream.getActiveCamera());\n      }\n    }\n  };\n  const onHostAudioMuted = useCallback((payload) => {\n    const { action, source, type } = payload;\n    if (action === 'join' && type === 'computer') {\n      setIsStartedAudio(true);\n    } else if (action === 'leave') {\n      setIsStartedAudio(false);\n    } else if (action === 'muted') {\n      setIsMuted(true);\n      if (source === 'passive(mute one)') {\n        message.info('Host muted you');\n      }\n    } else if (action === 'unmuted') {\n      setIsMuted(false);\n      if (source === 'passive') {\n        message.info('Host unmuted you');\n      }\n    }\n  }, []);\n  const onScreenShareClick = useCallback(async () => {\n    if (!isStartedScreenShare && shareRef && shareRef.current) {\n      await mediaStream?.startShareScreen(shareRef.current);\n      setIsStartedScreenShare(true);\n    } else if (isStartedScreenShare) {\n      await mediaStream?.stopShareScreen();\n      setIsStartedScreenShare(false);\n    }\n  }, [mediaStream, isStartedScreenShare, shareRef]);\n  const onPassivelyStopShare = useCallback(({ reason }) => {\n    console.log('passively stop reason:', reason);\n    setIsStartedScreenShare(false);\n  }, []);\n  const onDeviceChange = useCallback(() => {\n    if (mediaStream) {\n      setMicList(mediaStream.getMicList());\n      setSpeakerList(mediaStream.getSpeakerList());\n      setCameraList(mediaStream.getCameraList());\n      setActiveMicrophone(mediaStream.getActiveMicrophone());\n      setActiveSpeaker(mediaStream.getActiveSpeaker());\n      setActiveCamera(mediaStream.getActiveCamera());\n    }\n  }, [mediaStream]);\n\n  \n\n  \n  useEffect(() => {\n    zmClient.on('current-audio-change', onHostAudioMuted);\n    zmClient.on('passively-stop-share', onPassivelyStopShare);\n    zmClient.on('device-change', onDeviceChange);\n    return () => {\n      zmClient.off('current-audio-change', onHostAudioMuted);\n      zmClient.off('passively-stop-share', onPassivelyStopShare);\n      zmClient.off('device-change', onDeviceChange);\n    };\n  }, [zmClient, onHostAudioMuted, onPassivelyStopShare, onDeviceChange]);\n  useUnmount(() => {\n    if (isStartedAudio) {\n      mediaStream?.stopAudio();\n    }\n    if (isStartedVideo) {\n      mediaStream?.stopVideo();\n    }\n    if (isStartedScreenShare) {\n      mediaStream?.stopShareScreen();\n    }\n  });\n\n  const OutSession = () => {\n    if (userType === \"T\") {\n      zmClient.leave();\n      alert(\"세션을 종료합니다. 퇴장후 다시 입장하실 수 없습니다.\")\n      axios.get(`/lecture/${lectureId}/lesson/${lessonId}/live/exit`, { headers: { \"X-AUTH-TOKEN\": `${token}` }, params: { session: `${sessionId}` } })\n        .then((res) => {\n          const result = res.data.result;\n          if (result === \"SUCCESS\") {\n            return window.location.href = `/Main/Lecture/${lectureId}/Lesson`;\n          }\n      })\n    }\n    else {\n    zmClient.leave();\n    alert(\"수업을 나갑니다\");\n    return window.location.href = `/Main/Lecture/${lectureId}/Lesson`;\n      }\n  }\n  return (\n    <div className={classNames('video-footer', className)}>\n      {isAudioEnable && (\n      <MicrophoneButton\n        isStartedAudio={isStartedAudio}\n        isMuted={isMuted}\n        onMicrophoneClick={onMicrophoneClick}\n          onMicrophoneMenuClick={onMicrophoneMenuClick}\n          microphoneList={micList}\n          speakerList={speakerList}\n          activeMicrophone={activeMicrophone}\n          activeSpeaker={activeSpeaker}\n        />\n      )}\n      <CameraButton\n        isStartedVideo={isStartedVideo}\n        onCameraClick={onCameraClick}\n        onSwitchCamera={onSwitchCamera}\n        cameraList={cameraList}\n        activeCamera={activeCamera}\n      />\n      {sharing && (\n        <ScreenShareButton\n          isStartedScreenShare={isStartedScreenShare}\n          onScreenShareClick={onScreenShareClick}\n        />\n      )}\n      {(zmClient.isManager() || zmClient.isHost())&& (\n        <ScreenShareLockButton\n        isLockedScreenShare={isLockedScreenShare}\n        onScreenShareLockClick={()=>{\n          mediaStream?.lockShare(!isLockedScreenShare);\n          setIsLockedScreenShare(!isLockedScreenShare);\n        }}\n      />\n      )}\n      <LeaveBtn onClick={OutSession}>나가기</LeaveBtn>\n    </div>\n  );\n};\nexport default VideoFooter;\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\nimport { RouteComponentProps } from 'react-router-dom';\nimport ZoomContext from '../../context/zoom-context';\nimport ZoomMediaContext from '../../context/media-context';\nimport Avatar from './components/avatar';\nimport VideoFooter from \"./components/video-footer\";\nimport Pagination from './components/pagination';\nimport { useCanvasDimension } from './hooks/useCanvasDimension';\nimport { useGalleryLayout } from './hooks/useGalleryLayout';\nimport { usePagination } from './hooks/usePagination';\nimport { useActiveVideo } from './hooks/useAvtiveVideo';\nimport { useShare } from './hooks/useShare';\nimport './video.scss';\nimport { isSupportWebCodecs } from '../../utils/platform';\nimport Chat from \"../chat/chat\";\nimport axios from \"axios\";\nimport { Button } from \"antd\";\nimport styled from 'styled-components';\nimport io from \"socket.io-client\";\nimport QuizModal from './QuizModal';\n\nconst AttendanceBtn = styled.button`\n  color: red;\n`;\n\ninterface VideoProps extends RouteComponentProps {\n  lectureId: string;\n  lessonId: string; \n  sessionId: string;\n}\n\nconst VideoContainer: React.FunctionComponent<VideoProps> = (props) => {\n  const { history, lectureId, lessonId ,sessionId} = props;\n  const zmClient = useContext(ZoomContext);\n  const {\n    mediaStream,\n    video: { decode: isVideoDecodeReady },\n  } = useContext(ZoomMediaContext);\n  const videoRef = useRef<HTMLCanvasElement | null>(null);\n  const shareRef = useRef<HTMLCanvasElement  | null>(null);\n  const selfShareRef = useRef<HTMLCanvasElement & HTMLVideoElement| null>(null);\n  const shareContainerRef = useRef<HTMLDivElement | null>(null);\n  const canvasDimension = useCanvasDimension(mediaStream, videoRef);\n  const activeVideo = useActiveVideo(zmClient);\n  const user = JSON.parse(localStorage.userInfo);\n  const userType: string = user.userType;\n  const token = localStorage.getItem(\"token\");\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\n  const [understandId, setUnderstandId] = useState<number>(0);\n  const { page, pageSize, totalPage, totalSize, setPage } = usePagination(\n    zmClient,\n    canvasDimension,\n  );\n  const { visibleParticipants, layout: videoLayout } = useGalleryLayout(\n    zmClient,\n    mediaStream,\n    isVideoDecodeReady,\n    videoRef,\n    canvasDimension,\n    {\n      page,\n      pageSize,\n      totalPage,\n      totalSize,\n    },\n  );\n  const { isRecieveSharing, isStartedShare, sharedContentDimension } = useShare(\n    zmClient,\n    mediaStream,\n    shareRef,\n  );\n  const isSharing = isRecieveSharing || isStartedShare;\n  const contentDimension = sharedContentDimension;\n  const socket = io.connect(\"https://oneboard.connect.o-r.kr:8070\");\n  if (isSharing && shareContainerRef.current) {\n    const { width, height } = sharedContentDimension;\n    const {\n      width: containerWidth,\n      height: containerHeight,\n    } = shareContainerRef.current.getBoundingClientRect();\n    const ratio = Math.min(containerWidth / width, containerHeight / height, 1);\n    contentDimension.width = Math.floor(width * ratio);\n    contentDimension.height = Math.floor(height * ratio);\n  }\n\n\n\n  useEffect(() => {\n      socket.emit(\"init\", {\n    \"userType\": userType,\n    \"room\" : sessionId\n  });\n\n    socket.on(\"attendance request\", (data: any) => {\n      alert(\"출석 확인\");\n    axios.get(`/lecture/${lectureId}/lesson/${lessonId}/live/attendance/student`,{params: {\"session\" : `${sessionId}`} , headers: {\"X-AUTH-TOKEN\" : `${token}`}})\n      .then((res) => {\n        console.log(res);\n        const result = res.data.result;\n        if (result === \"SUCCESS\") {\n          console.log(\"hi\");\n        }\n        else {\n          console.log(\"error\");\n        }\n      })\n      .catch((error) => {\n      console.log(error);   \n    })\n  }  \n)  \n  }, [])\n  \n  socket.on(\"understanding request\", (data: any) => {\n    //모달 \n    //axios post\n    axios.post(`/lecture/${lectureId}/lesson/${lessonId}/live/understanding/${understandId}/student`\n    \n    )\n  })\n  \n  \n\n  \n  \n  const checkAttendance = (e: any) => {\n    // e.preventDefault(); \n    axios.get(`/lecture/${lectureId}/lesson/${lessonId}/live/attendance/professor`,{params: { session: `${sessionId}` }})\n      .then((res) => {\n      alert(\"학생들에게 출석요청을 보냈습니다.\")\n      console.log(res);\n      })\n      .catch(e => {\n      console.log(e);\n    })\n  }\n\n  const checkUnderstand = () => {\n    axios.get(`/lecture/${lectureId}/lesson/${lessonId}/live/understanding/professor`,{params : {session : `${sessionId}`}})\n      .then((res) => {\n        alert(\"학생들에게 이해도 평가요청을 보냈습니다.\");\n        console.log(res);\n        const result = res.data.data;\n        setUnderstandId(result);\n      })\n      .catch((error) => {\n      console.log(error);\n    })\n  }\n\n\n    const openModal = () => {\n    setModalVisible(true)\n  }\n  const closeModal = () => {\n    setModalVisible(false)\n  }\n    \n    \n\n  return (\n    <div className=\"viewport\">\n      <div\n        className={classnames('share-container', {\n          'in-sharing': isSharing,\n        })}\n        ref={shareContainerRef}\n      >\n        <div\n          className=\"share-container-viewport\"\n          style={{\n            width: `${contentDimension.width}px`,\n            height: `${contentDimension.height}px`,\n          }}\n        >\n          <canvas\n            className={classnames('share-canvas', { hidden: isStartedShare })}\n            ref={shareRef}\n          />\n          {isSupportWebCodecs()?<video\n            className={classnames('share-canvas', { hidden: isRecieveSharing })}\n            ref={selfShareRef}\n          />:<canvas\n            className={classnames('share-canvas', { hidden: isRecieveSharing })}\n            ref={selfShareRef}\n          />}\n        </div>\n      </div>\n      <div\n        className={classnames('video-container', {\n          'in-sharing': isSharing,\n        })}\n      >\n        <canvas\n          className=\"video-canvas\"\n          id=\"video-canvas\"\n          width=\"800\"\n          height=\"600\"\n          ref={videoRef}\n        />\n        <ul className=\"avatar-list\">\n          {visibleParticipants.map((user, index) => {\n            if (index > videoLayout.length - 1) {\n              return null;\n            }\n            const dimension = videoLayout[index];\n            const { width, height, x, y } = dimension;\n            const { height: canvasHeight } = canvasDimension;\n            return (\n              <Avatar\n                participant={user}\n                key={user.userId}\n                isActive={activeVideo === user.userId}\n                style={{\n                  width: `${width}px`,\n                  height: `${height}px`,\n                  top: `${canvasHeight - y - height}px`,\n                  left: `${x}px`,\n                }}\n              />\n            );\n          })}\n        </ul>\n      </div>\n      <VideoFooter className=\"video-operations\" sharing shareRef={selfShareRef} lectureId={props.lectureId} lessonId={props.lessonId} sessionId={props.sessionId} />\n      {totalPage > 1 && (\n        <Pagination\n          page={page}\n          totalPage={totalPage}\n          setPage={setPage}\n          inSharing={isSharing}\n        />\n      )}\n      {userType === \"T\" ? (<div>\n        <AttendanceBtn onClick={checkUnderstand}>이해도 확인 요청</AttendanceBtn>\n        <AttendanceBtn onClick={checkAttendance}>출석요청</AttendanceBtn>\n        <AttendanceBtn onClick={openModal}>퀴즈출제</AttendanceBtn>\n        {\n          modalVisible && <QuizModal\n          visible={modalVisible}\n          closable={true}\n          maskClosable={true}\n            onClose={closeModal}\n            lessonId={props.lessonId}\n            lectureId={props.lectureId}\n            sessionId={props.sessionId}\n          className=\"modal-root\">퀴즈 출제</QuizModal>\n        }\n      </div>) : (<div></div>)}\n      <Chat/>\n    </div>\n  );\n};\n\nexport default VideoContainer;\n","import React, {\n  useEffect,\n  useContext,\n  useState,\n  useCallback,\n  useReducer,\n} from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ZoomVideo, { ConnectionState } from \"@zoom/videosdk\";\nimport { message, Modal } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport produce from \"immer\";\nimport Home from \"../ZoomSample/feature/home/home\";\nimport Video from \"../ZoomSample/feature/video/video\";\nimport VideoSingle from '../ZoomSample/feature/video/video-single';\nimport Preview from \"../ZoomSample/feature/preview/preview\";\nimport ZoomContext from \"../ZoomSample/context/zoom-context\";\nimport ZoomMediaContext from \"../ZoomSample/context/media-context\";\nimport ChatContext from \"../ZoomSample/context/chat-context\";\nimport LoadingLayer from \"../ZoomSample/component/loading-layer\";\nimport Chat from \"../ZoomSample/feature/chat/chat\";\nimport { ChatClient, MediaStream } from \"../index-types\";\nimport \"./test.css\";\nimport { generateVideoToken } from \"../ZoomSample/utils/util\";\nimport  io from \"socket.io-client\";\n\nconst mediaShape = {\n  audio: {\n    encode: false,\n    decode: false,\n  },\n  video: {\n    encode: false,\n    decode: false,\n  },\n  share: {\n    encode: false,\n    decode: false,\n  },\n};\nconst mediaReducer = produce((draft, action) => {\n  switch (action.type) {\n    case \"audio-encode\": {\n      draft.audio.encode = action.payload;\n      break;\n    }\n    case \"audio-decode\": {\n      draft.audio.decode = action.payload;\n      break;\n    }\n    case \"video-encode\": {\n      draft.video.encode = action.payload;\n      break;\n    }\n    case \"video-decode\": {\n      draft.video.decode = action.payload;\n      break;\n    }\n    case \"share-encode\": {\n      draft.share.encode = action.payload;\n      break;\n    }\n    case \"share-decode\": {\n      draft.share.decode = action.payload;\n      break;\n    }\n    default:\n      break;\n  }\n}, mediaShape);\n\ninterface TestProps {\n  match: {\n    params: {\n      lectureId: string,\n      lessonId: string,\n      sessionId: string\n    }\n  }\n}\n\ninterface Myobj {\n  userType: string,\n  sessionId : string\n}\n\nfunction TestZoom(props: TestProps) {\n  const [loading, setIsLoading] = useState(true);\n  const [loadingText, setLoadingText] = useState(\"\");\n  const [isFailover, setIsFailover] = useState<boolean>(false);\n  const [status, setStatus] = useState<string>(\"closed\");\n  const [mediaState, dispatch] = useReducer(mediaReducer, mediaShape);\n  const [mediaStream, setMediaStream] = useState<MediaStream | null>(null);\n  const [chatClient, setChatClient] = useState<ChatClient | null>(null);\n  const [isSupportGalleryView, setIsSupportGalleryView] = useState<boolean>(true);\n  const init = \"init\";\n  const socket = io.connect(\"https://oneboard.connect.o-r.kr:8070\");\n  const zmClient = useContext(ZoomContext);\n  const user = JSON.parse(localStorage.userInfo);\n  const userType: string = user.userType;\n  const userName = user.name;\n  const sessionId: string = props.match.params.sessionId;\n  const lectureId = props.match.params.lectureId;\n  const lessonId = props.match.params.lessonId;\n  const token = generateVideoToken(\n    \"MoRylmD2jBq9NfbZXbSVmvZcGYOFkDCeJc3e\",\n    \"NewabYwGXIFrOlPRf4dZBKeqFECESIkdlLrq\",\n    sessionId,\n    \"\",\n    \"\",\n    \"\"\n  );\n  \n\n  \n  useEffect(() => {\n    const init = async () => {\n      await zmClient.init(\"en-US\", `${window.location.origin}/lib`, 'zoom.us');\n      try {\n        setLoadingText(\"Joining the session...\");\n        await zmClient.join(sessionId, token, userName, \"\");\n        const stream = zmClient.getMediaStream();\n        setMediaStream(stream);\n\t      setIsSupportGalleryView(stream.isSupportMultipleVideos());\n        const chatClient = zmClient.getChatClient();\n        setChatClient(chatClient);\n        setIsLoading(false);\n      } catch (e) {\n        setIsLoading(false);\n       \n      }\n    };\n    init();\n    return () => {\n      ZoomVideo.destroyClient();\n    };\n  }, [zmClient]);\n  const onConnectionChange = useCallback(\n    (payload) => {\n      if (payload.state === ConnectionState.Reconnecting) {\n        setIsLoading(true);\n        setIsFailover(true);\n        setStatus(\"connecting\");\n        const { reason } = payload;\n        if (reason === \"failover\") {\n          setLoadingText(\"Session Disconnected,Try to reconnect\");\n        }\n      } else if (payload.state === ConnectionState.Connected) {\n        setStatus(\"connected\");\n        if (isFailover) {\n          setIsLoading(false);\n        }\n      } else if (payload.state === ConnectionState.Closed) {\n        setStatus(\"closed\");\n        if (payload.reason === \"ended by host\") {\n          Modal.warning({\n            title: \"Meeting ended\",\n            content: \"This meeting has been ended by host\",\n          });\n        }\n      }\n    },\n    [isFailover]\n  );\n  const onMediaSDKChange = useCallback((payload) => {\n    const { action, type, result } = payload;\n    dispatch({ type: `${type}-${action}`, payload: result === \"success\" });\n  }, []);\n  const onLeaveOrJoinSession = useCallback(async () => {\n    if (status === \"closed\") {\n      setIsLoading(true);\n      await zmClient.join(sessionId, token, userName, \"\");\n      setIsLoading(false);\n    } else if (status === \"connected\") {\n      await zmClient.leave();\n      message.warn(\"You have left the session.\");\n    }\n  }, [zmClient, status]);\n  useEffect(() => {\n    zmClient.on(\"connection-change\", onConnectionChange);\n    zmClient.on(\"media-sdk-change\", onMediaSDKChange);\n    return () => {\n      zmClient.off(\"connection-change\", onConnectionChange);\n      zmClient.off(\"media-sdk-change\", onMediaSDKChange);\n    };\n  }, [zmClient, onConnectionChange, onMediaSDKChange]);\n  return (\n    <div className=\"App\">\n      {loading && <LoadingLayer content={loadingText} />}\n      {!loading && (\n        <ZoomMediaContext.Provider value={{ ...mediaState, mediaStream }}>\n          <ChatContext.Provider value={chatClient}>  \n            \n            \n            {/* <Router>\n              <Switch>\n                <Route\n                  path={`/class/${lectureId}/${lessonId}/${sessionId}/${userType}`}\n                  render={(props) => (\n                    <Home\n                      {...props}\n                      status={status}\n                      onLeaveOrJoinSession={onLeaveOrJoinSession}\n                    />\n                  )}\n                  exact\n                />\n                <Route\n                   path={`/class/${lectureId}/${lessonId}/${sessionId}/${userType}`}\n                  render={(props) => (\n                    <Home\n                      {...props}\n                      status={status}\n                      onLeaveOrJoinSession={onLeaveOrJoinSession}\n                    />\n                  )}\n                  exact\n                />\n                <Route\n                  path=\"/preview\"\n                  component={Preview}\n                /> */}\n            {/* <Route path={`/class/${lectureId}/${lessonId}/${sessionId}/${userType}`} component= {isSupportGalleryView ? Video : VideoSingle} /> */}\n            <Route path={`/class/${lectureId}/${lessonId}/${sessionId}/${userType}`} render={(props) => (\n              isSupportGalleryView ? (<Video {...props} lectureId={lectureId} lessonId={lessonId} sessionId={sessionId} />) : (<VideoSingle {...props} lectureId={lectureId} lessonId={lessonId} sessionId={sessionId}/>)\n            )} />\n              \n            \n                {/* <Route path=\"/chat\" component={Chat} />\n              </Switch>\n            </Router> */}\n          </ChatContext.Provider>\n        </ZoomMediaContext.Provider>\n      )}\n    </div>\n  );\n}\n\nexport default TestZoom;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAiiCA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhDA;AAAA;AAAA;AAAA;AAAA;AAmDA;AACA;AAtIA;AACA;AADA;AAuIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpiBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAEA;AACA;AACA;AAFA;AADA;AAQA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AADA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AA9DA;AAAA;AAAA;AAAA;AAAA;AA2FA;AA5GA;AAAA;AAAA;AAAA;AAAA;AA3BA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AA6IA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAxJA;AAAA;AAAA;AAAA;AAAA;AA+JA;AACA;AApRA;AACA;AADA;AAqRA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/UA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAC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A;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAezBA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAoFA;AACA;AAxHA;AACA;AADA;AAyHA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnJA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1CA;AAAA;AAAA;AAAA;AAAA;AA6CA;AACA;AAjKA;AACA;AADA;AAkKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AARA;AAYA;AAiBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AA5CA;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AA+DA;AACA;AAvLA;AACA;AADA;AAwLA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAvCA;AAAA;AAAA;AAAA;AAAA;AA6CA;AACA;AAhKA;AACA;AADA;AAiKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpRA;AACA;AACA;AACA;AACA;AACA;AASA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AAFA;AAaA;AACA;AACA;AAEA;AACA;AAKA;AAPA;AAHA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AA1CA;AAAA;AAAA;AAAA;AAAA;AA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AA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A;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAxFA;AAAA;AAAA;AAAA;AAAA;AA2FA;AACA;AA9NA;AAWA;;;AAXA;AA+NA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChQA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AAcA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AA1BA;AA4BA;AACA;AAgBA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAgCA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAhCA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAiDA;AACA;AAvJA;AACA;AADA;AAwJA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}