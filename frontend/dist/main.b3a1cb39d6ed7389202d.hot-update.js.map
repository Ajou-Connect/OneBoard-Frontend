{"version":3,"file":"main.b3a1cb39d6ed7389202d.hot-update.js","sources":["/mnt/e/sw_capstone/frontend/src/ZoomSample/feature/video/Modal.js","/mnt/e/sw_capstone/frontend/src/ZoomSample/feature/video/video.tsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ModalWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  display: ${(props) => (props.visible ? 'block' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  overflow: auto;\r\n  outline: 0;\r\n`\r\n\r\nconst ModalOverlay = styled.div`\r\n  box-sizing: border-box;\r\n  display: ${(props) => (props.visible ? 'block' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  z-index: 999;\r\n`\r\n\r\nconst ModalInner = styled.div`\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  width: 360px;\r\n  max-width: 480px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n`\r\nconst CloseBtn = styled.button`\r\n  color: red;\r\n`\r\n\r\nModal.propTypes = {\r\n  visible: PropTypes.bool,\r\n}\r\n\r\nfunction Modal({ className,\r\n  onClose,\r\n  maskClosable,\r\n  closable,\r\n  visible,\r\n  children, }) {\r\n  \r\n   const onMaskClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose(e)\r\n    }\r\n  }\r\n\r\n  const close = (e) => {\r\n    if (onClose) {\r\n      onClose(e)\r\n    }\r\n  }\r\n    return (\r\n        <>\r\n            <ModalOverlay visible={visible} />\r\n      <ModalWrapper\r\n        className={className}\r\n        onClick={maskClosable ? onMaskClick : null}\r\n        tabIndex=\"-1\"\r\n        visible={visible}\r\n      >\r\n        <ModalInner tabIndex=\"0\" className=\"modal-inner\">\r\n          {closable && <CloseBtn className=\"modal-close\" onClick={close} />}\r\n          {children}\r\n        </ModalInner>\r\n      </ModalWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useContext, useRef, useState } from 'react';\nimport classnames from 'classnames';\nimport { RouteComponentProps } from 'react-router-dom';\nimport ZoomContext from '../../context/zoom-context';\nimport ZoomMediaContext from '../../context/media-context';\nimport Avatar from './components/avatar';\nimport VideoFooter from \"./components/video-footer\";\nimport Pagination from './components/pagination';\nimport { useCanvasDimension } from './hooks/useCanvasDimension';\nimport { useGalleryLayout } from './hooks/useGalleryLayout';\nimport { usePagination } from './hooks/usePagination';\nimport { useActiveVideo } from './hooks/useAvtiveVideo';\nimport { useShare } from './hooks/useShare';\nimport './video.scss';\nimport { isSupportWebCodecs } from '../../utils/platform';\nimport Chat from \"../chat/chat\";\nimport axios from \"axios\";\nimport { Button } from \"antd\";\nimport styled from 'styled-components';\nimport io from \"socket.io-client\";\nimport Modal from './Modal';\n\nconst AttendanceBtn = styled.button`\n  color: red;\n`;\n\ninterface VideoProps extends RouteComponentProps {\n  lectureId: string;\n  lessonId: string; \n  sessionId: string;\n}\n\nconst VideoContainer: React.FunctionComponent<VideoProps> = (props) => {\n  const { history, lectureId, lessonId ,sessionId} = props;\n  const zmClient = useContext(ZoomContext);\n  const {\n    mediaStream,\n    video: { decode: isVideoDecodeReady },\n  } = useContext(ZoomMediaContext);\n  const videoRef = useRef<HTMLCanvasElement | null>(null);\n  const shareRef = useRef<HTMLCanvasElement  | null>(null);\n  const selfShareRef = useRef<HTMLCanvasElement & HTMLVideoElement| null>(null);\n  const shareContainerRef = useRef<HTMLDivElement | null>(null);\n  const canvasDimension = useCanvasDimension(mediaStream, videoRef);\n  const activeVideo = useActiveVideo(zmClient);\n  const user = JSON.parse(localStorage.userInfo);\n  const userType: string = user.userType;\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\n  const { page, pageSize, totalPage, totalSize, setPage } = usePagination(\n    zmClient,\n    canvasDimension,\n  );\n  const { visibleParticipants, layout: videoLayout } = useGalleryLayout(\n    zmClient,\n    mediaStream,\n    isVideoDecodeReady,\n    videoRef,\n    canvasDimension,\n    {\n      page,\n      pageSize,\n      totalPage,\n      totalSize,\n    },\n  );\n  const { isRecieveSharing, isStartedShare, sharedContentDimension } = useShare(\n    zmClient,\n    mediaStream,\n    shareRef,\n  );\n  const isSharing = isRecieveSharing || isStartedShare;\n  const contentDimension = sharedContentDimension;\n  const socket = io.connect(\"https://oneboard.connect.o-r.kr:8070\");\n  if (isSharing && shareContainerRef.current) {\n    const { width, height } = sharedContentDimension;\n    const {\n      width: containerWidth,\n      height: containerHeight,\n    } = shareContainerRef.current.getBoundingClientRect();\n    const ratio = Math.min(containerWidth / width, containerHeight / height, 1);\n    contentDimension.width = Math.floor(width * ratio);\n    contentDimension.height = Math.floor(height * ratio);\n  }\n\n    socket.emit(\"init\", {\n      \"userType\": userType,\n      \"room\" : sessionId\n    })\n  \n  socket.on(\"attendance request\" , )\n  \n  const checkAttendance = (e: any) => {\n    // e.preventDefault(); \n    axios.get(`/lecture/${lectureId}/lesson/${lessonId}/live/attendance/professor`,{params: { session: `${sessionId}` }})\n      .then((res) => {\n      alert(\"학생들에게 출석요청을 보냈습니다.\")\n      console.log(res);\n      })\n      .catch(e => {\n      console.log(e);\n    })\n  }\n\n  const checkUnderstand = () => {\n    axios.get(`/lecture/${lectureId}/lesson/${lessonId}/live/understanding/professor`,{params : {session : `${sessionId}`}})\n      .then((res) => {\n        alert(\"학생들에게 이해도 평가요청을 보냈습니다.\");\n        console.log(res);\n        const result = res.data.data;\n      })\n      .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  const makeQuiz = () => {\n    axios.post(`/lecture/${lectureId}/lesson/${lessonId}/live/quiz/professor`, {\n      \"question\": \"김동현\",\n      \"answer1\": \"test1\",\n      \"answer2\": \"test1\",\n      \"answer3\": \"test1\",\n      \"answer4\": \"test1\",\n      \"answer5\": \"test1\",\n      \"answer\": 1,\n      \n    }, { params: { session: `${sessionId}` } })\n      .then((res) => {\n        console.log(res.data.data);\n        const result = res.data.data\n      })\n      .catch((error) => {\n      console.log(error);\n      \n    })\n  }\n\n    const openModal = () => {\n    setModalVisible(true)\n  }\n  const closeModal = () => {\n    setModalVisible(false)\n  }\n    \n    \n\n  return (\n    <div className=\"viewport\">\n      <div\n        className={classnames('share-container', {\n          'in-sharing': isSharing,\n        })}\n        ref={shareContainerRef}\n      >\n        <div\n          className=\"share-container-viewport\"\n          style={{\n            width: `${contentDimension.width}px`,\n            height: `${contentDimension.height}px`,\n          }}\n        >\n          <canvas\n            className={classnames('share-canvas', { hidden: isStartedShare })}\n            ref={shareRef}\n          />\n          {isSupportWebCodecs()?<video\n            className={classnames('share-canvas', { hidden: isRecieveSharing })}\n            ref={selfShareRef}\n          />:<canvas\n            className={classnames('share-canvas', { hidden: isRecieveSharing })}\n            ref={selfShareRef}\n          />}\n        </div>\n      </div>\n      <div\n        className={classnames('video-container', {\n          'in-sharing': isSharing,\n        })}\n      >\n        <canvas\n          className=\"video-canvas\"\n          id=\"video-canvas\"\n          width=\"800\"\n          height=\"600\"\n          ref={videoRef}\n        />\n        <ul className=\"avatar-list\">\n          {visibleParticipants.map((user, index) => {\n            if (index > videoLayout.length - 1) {\n              return null;\n            }\n            const dimension = videoLayout[index];\n            const { width, height, x, y } = dimension;\n            const { height: canvasHeight } = canvasDimension;\n            return (\n              <Avatar\n                participant={user}\n                key={user.userId}\n                isActive={activeVideo === user.userId}\n                style={{\n                  width: `${width}px`,\n                  height: `${height}px`,\n                  top: `${canvasHeight - y - height}px`,\n                  left: `${x}px`,\n                }}\n              />\n            );\n          })}\n        </ul>\n      </div>\n      <VideoFooter className=\"video-operations\" sharing shareRef={selfShareRef} lectureId={props.lectureId} lessonId={props.lessonId} sessionId={props.sessionId} />\n      {totalPage > 1 && (\n        <Pagination\n          page={page}\n          totalPage={totalPage}\n          setPage={setPage}\n          inSharing={isSharing}\n        />\n      )}\n      {userType === \"T\" ? (<div>\n        <AttendanceBtn onClick={checkUnderstand}>이해도 확인 요청</AttendanceBtn>\n        <AttendanceBtn onClick={checkAttendance}>출석요청</AttendanceBtn>\n        <AttendanceBtn onClick={openModal}>퀴즈출제</AttendanceBtn>\n        {\n            modalVisible && <Modal\n          visible={modalVisible}\n          closable={true}\n          maskClosable={true}\n          onClose={closeModal}>Hello</Modal>\n        }\n      </div>) : (<div></div>)}\n      <Chat/>\n    </div>\n  );\n};\n\nexport default VideoContainer;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAaA;AACA;AACA;AAFA;AAIA;AACA;AADA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAFA;AAeA;AACA;AAnCA;AAoCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AACA;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AADA;AAGA;AAJA;AAOA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AA2BA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAJA;AAAA;AAAA;AAAA;AAAA;AAYA;AArBA;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAAA;AAoCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AApFA;AAAA;AAAA;AAAA;AAAA;AAuFA;AACA;AA1MA;AAWA;;;AAXA;AA2MA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}