{"version":3,"file":"main.e077418ef7d289ab0b38.hot-update.js","sources":["/mnt/f/SW_Capstone/frontend/src/Pages/LecturePages/Assignment/ProfessorAssignmentList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport Button from '../../../Component/common/Button';\r\n\r\nconst WriteAcitonButtonBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-bottom: 2rem;\r\n  display: flex;\r\n  button + button {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2.125rem;\r\n  & + & {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  margin-top: 1.5rem;\r\n  margin-left: 20px;\r\n  font-size: 30px;\r\n  border-bottom: 1px solid #f7f9fc;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst StateColorCircle = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  display: inline-block;\r\n  float: right;\r\n  border-radius: 75px;\r\n`;\r\nconst StateDescript = styled.div`\r\n  height: 20px;\r\n  display: inline-block;\r\n  float: right;\r\n  font-size: 14px;\r\n  margin-left: 5px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ProfessorAssignmentList = (props) => {\r\n  const user = JSON.parse(localStorage.userInfo);\r\n  const userType = user.userType;\r\n  const lectureId = props.lectureId;\r\n  const [assignments, setAssignments] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isEmpty, setIsEmpty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchAssignment = async () => {\r\n      try {\r\n        setError(null);\r\n        setLoading(true);\r\n        //axios.get\r\n        await axios\r\n          .get(`/lecture/${lectureId}/assignments`)\r\n          .then((res) => {\r\n            const result = res.data.data;\r\n            console.log(result);\r\n            setAssignments(result);\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n            setError(e);\r\n          });\r\n        setLoading(false);\r\n      } catch (e) {\r\n        setError(e);\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchAssignment();\r\n  }, []);\r\n\r\n  const stateDisplay = (startDate, endDate) => {\r\n    let today = moment();\r\n\r\n    if (today.isBefore(startDate)) {\r\n      return (\r\n        <div style={{ color: '#BFBFBF', fontWeight: '700' }}>\r\n          {moment(startDate).format('M월 D일 HH:mm')} - {moment(endDate).format('M월 D일 HH:mm')}{' '}\r\n          (예정)\r\n        </div>\r\n      );\r\n    } else if (today.isBefore(endDate)) {\r\n      return (\r\n        <div style={{ color: '#61C679', fontWeight: '700' }}>\r\n          <StateColorCircle style={{ backgroundColor: '#66FF33' }} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ color: '#E24C4B', fontWeight: '700' }}>\r\n          <StateColorCircle style={{ backgroundColor: '#E24C4B' }} />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (loading)\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: 'center',\r\n          fontSize: '30px',\r\n          fontStyle: 'italic',\r\n          fontWeight: 'bold',\r\n        }}\r\n      >\r\n        로딩중 ...\r\n      </div>\r\n    );\r\n\r\n  if (error)\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: 'center',\r\n          fontSize: '30px',\r\n          fontStyle: 'italic',\r\n          fontWeight: 'bold',\r\n        }}\r\n      >\r\n        에러가 발생했습니다. 과제목록을 불러올수 없습니다.\r\n      </div>\r\n    );\r\n\r\n  const goWrite = () => {\r\n    return (window.location.href = `/Main/Lecture/${lectureId}/Assignment/Write`);\r\n  };\r\n\r\n  const goUpdate = (e, assignmentId) => {\r\n    return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment/Update/${assignmentId}`);\r\n  };\r\n\r\n  const goDetail = (e, assignmentId) => {\r\n    //해당 assignment에 해당하는 페이지로 라우팅\r\n    return (window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment/${assignmentId}/ProfessorDetail`);\r\n  };\r\n\r\n  const onDelete = (e, assignmentId) => {\r\n    console.log(assignmentId);\r\n    console.log(lectureId);\r\n    axios\r\n      .delete(`/lecture/${lectureId}/assignment/${assignmentId}`)\r\n      .then((res) => {\r\n        window.location.href = `/Main/Lecture/${userType}/${lectureId}/Assignment`;\r\n        console.log(res);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title>Assignment</Title>\r\n      <div style={{ width: '100%', display: 'block' }}>\r\n        <div style={{ width: '100%', display: 'block', height: '20px' }}>\r\n          <StateDescript>마감</StateDescript>{' '}\r\n          <StateColorCircle style={{ backgroundColor: '#E24C4B' }} />\r\n          <StateDescript>진행 중</StateDescript>{' '}\r\n          <StateColorCircle style={{ backgroundColor: '#66FF33' }} />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <table\r\n          style={{\r\n            width: '100%',\r\n            margin: '10px auto',\r\n            borderTop: '1px solid #D5D5D5',\r\n            textAlign: 'center',\r\n            borderSpacing: '0px 10px',\r\n            borderCollapse: 'separate',\r\n          }}\r\n        >\r\n          <thead\r\n            style={{\r\n              borderBottom: '1px solid #D5D5D5',\r\n              fontStyle: 'bold',\r\n              fontWeight: '500',\r\n              backgroundColor: '#f3f3f3',\r\n            }}\r\n          >\r\n            <tr>\r\n              <th style={{ padding: '10px 0', width: '10% ' }}>ID</th>\r\n              <th style={{ padding: '10px 0', width: '20% ' }}>과제 명</th>\r\n              <th style={{ padding: '10px 0', width: '40% ' }}>과제 기간</th>\r\n              <th style={{ padding: '10px 0', width: '10% ' }}>배점</th>\r\n              <th style={{ padding: '10px 0', width: '5% ' }}>진행 상태</th>\r\n              <th style={{ padding: '10px 0', width: '20% ' }}>수정/삭제</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {assignments.length === 0 ? (\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  textAlign: 'center',\r\n                  marginLeft: '400px',\r\n                  fontSize: '30px',\r\n                  fontStyle: 'italic',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                등록된 과제가 없습니다.\r\n              </div>\r\n            ) : (\r\n              assignments.map((assignmentList, index) => {\r\n                return (\r\n                  <tr\r\n                    style={{\r\n                      borderRadius: '5px',\r\n                      boxShadow: '0px 2px 2px 1px #eeeeee',\r\n                    }}\r\n                    key={index}\r\n                  >\r\n                    <td\r\n                      style={{\r\n                        padding: '15px 0',\r\n                        borderBottom: '1px solid #D5D5D5',\r\n                      }}\r\n                    >\r\n                      {index + 1}\r\n                    </td>\r\n                    <td\r\n                      style={{\r\n                        padding: '15px 0',\r\n                        borderBottom: '1px solid #D5D5D5',\r\n                      }}\r\n                    >\r\n                      <div\r\n                        key={index}\r\n                        style={{\r\n                          fontSize: '20px',\r\n                          fontWeight: '700',\r\n                          color: '#3E3E3E',\r\n                          display: 'block',\r\n                          cursor: 'pointer',\r\n                          textDecoration: 'underline',\r\n                        }}\r\n                        onClick={(e) => goDetail(e, assignmentList.assignmentId)}\r\n                      >\r\n                        {assignmentList.title}\r\n                      </div>\r\n                    </td>\r\n                    <td\r\n                      style={{\r\n                        padding: '15px 0',\r\n                        borderBottom: '1px solid #D5D5D5',\r\n                      }}\r\n                    >\r\n                      {assignmentList.startDt} ~ {assignmentList.endDt}\r\n                    </td>\r\n                    <td\r\n                      style={{\r\n                        padding: '15px 0',\r\n                        borderBottom: '1px solid #D5D5D5',\r\n                      }}\r\n                    >\r\n                      {assignmentList.score}\r\n                    </td>\r\n\r\n                    <td\r\n                      style={{\r\n                        padding: '20px',\r\n                        borderBottom: '1px solid #D5D5D5',\r\n                        justifyContent: 'center',\r\n                      }}\r\n                    >\r\n                      {stateDisplay(moment(assignmentList.startDt), moment(assignmentList.endDt))}\r\n                    </td>\r\n                    <td\r\n                      style={{\r\n                        padding: '15px 0',\r\n                        borderBottom: '1px solid #D5D5D5',\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                      }}\r\n                    >\r\n                      <WriteAcitonButtonBlock>\r\n                        <StyledButton\r\n                          cyan\r\n                          onClick={(e) => {\r\n                            goUpdate(e, assignmentList.assignmentId);\r\n                          }}\r\n                        >\r\n                          수정\r\n                        </StyledButton>\r\n                        <StyledButton\r\n                          cyan\r\n                          onClick={(e) => {\r\n                            onDelete(e, assignmentList.assignmentId);\r\n                          }}\r\n                        >\r\n                          삭제\r\n                        </StyledButton>\r\n                      </WriteAcitonButtonBlock>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div style={{ marginLeft: '1rem' }}>\r\n        <StyledButton cyan onClick={(e) => goWrite(e)}>\r\n          작성하기\r\n        </StyledButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessorAssignmentList;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAGA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAEA;AACA;AACA;AAFA;AADA;AAQA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AADA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AA9DA;AAAA;AAAA;AAAA;AAAA;AA2FA;AA5GA;AAAA;AAAA;AAAA;AAAA;AA3BA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AA6IA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAxJA;AAAA;AAAA;AAAA;AAAA;AA+JA;AACA;AApRA;AACA;AADA;AAqRA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}