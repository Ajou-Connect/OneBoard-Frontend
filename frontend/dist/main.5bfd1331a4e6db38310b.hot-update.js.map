{"version":3,"file":"main.5bfd1331a4e6db38310b.hot-update.js","sources":["/mnt/e/sw_capstone/frontend/src/Pages/LecturePages/Attendance/ProfessorAttendance.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst Title = styled.div`\r\n  margin-top: 1.5rem;\r\n  margin-left: 20px;\r\n  font-size: 30px;\r\n  border-bottom: 1px solid #f7f9fc;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst TabletrColor = styled.tr`\r\n  &:nth-child(even) {\r\n    background: #f7f9fc;\r\n  }\r\n`;\r\n\r\nconst ProfessorAttendance = (props) => {\r\n  const [attendances, setAttendances] = useState([]);\r\n  const lectureId = props.lectureId;\r\n  const user = JSON.parse(localStorage.userInfo);\r\n  const userType = user.userType;\r\n\r\n  const getAttendanceData = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(`lecture/${lectureId}/attendances`)\r\n        .then((res) => {\r\n          const result = res.data.data;\r\n          setAttendances(result);\r\n          console.log(result);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAttendanceData();\r\n  }, []);\r\n\r\n  const onDetail = (e, studentId) => {\r\n    console.log(studentId);\r\n    return (window.location.href = `/Main/Lecture/${lectureId}/Attendance/${studentId}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title>출석현황</Title>\r\n      <hr style={{ width: '100%', margin: '10px 0px', display: 'block', borderColor: '#ffffff' }} />\r\n      <table\r\n        style={{\r\n          width: '100%',\r\n          borderTop: '1px solid #D5D5D5',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        <thead\r\n          style={{\r\n            borderBottom: '1px solid #D5D5D5',\r\n            fontStyle: 'bold',\r\n            fontWeight: '500',\r\n            backgroundColor: '#f3f3f3',\r\n          }}\r\n        >\r\n          <tr>\r\n            <th style={{ padding: '10px 0', width: 'auto' }}>학생 이름</th>\r\n            <th style={{ padding: '10px 0', width: 'auto' }}>학번</th>\r\n            <th style={{ padding: '10px 0', width: 'auto' }}>출석횟수</th>\r\n            <th style={{ padding: '10px 0', width: 'auto' }}>전체 수업 수</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {attendances.map((attendance, index) => (\r\n            <TabletrColor key={index}>\r\n              <td\r\n                style={{\r\n                  padding: '10px 0',\r\n                  borderBottom: '1px solid #D5D5D5',\r\n                  cursor: 'pointer',\r\n                  fontWeight: 'bold',\r\n                  textDecoration: 'underline',\r\n                }}\r\n                onClick={(e) => onDetail(e, attendance.studentId)}\r\n              >\r\n                {attendance.studentName}\r\n              </td>\r\n              <td style={{ padding: '10px 0', borderBottom: '1px solid #D5D5D5' }}>\r\n                {attendance.studentNumber}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  padding: '10px 0',\r\n                  borderBottom: '1px solid #D5D5D5',\r\n                  color: '#0C7E82',\r\n                  fontWeight: 'bold',\r\n                  fontSize: '1.2rem',\r\n                }}\r\n              >\r\n                {attendance.attendanceList.filter((list) => list.status === 2).length}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  padding: '10px 0',\r\n                  borderBottom: '1px solid #D5D5D5',\r\n                  fontWeight: 'bold',\r\n                  fontSize: '1rem',\r\n                }}\r\n              >\r\n                / {attendance.attendanceList.length}\r\n              </td>\r\n            </TabletrColor>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessorAttendance;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAQA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAeA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAsEA;AACA;AAvGA;AACA;AADA;AAwGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}